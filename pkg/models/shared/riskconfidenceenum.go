// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// RiskConfidenceEnum - An enumeration.
type RiskConfidenceEnum string

const (
	RiskConfidenceEnumHigh   RiskConfidenceEnum = "HIGH"
	RiskConfidenceEnumMedium RiskConfidenceEnum = "MEDIUM"
	RiskConfidenceEnumLow    RiskConfidenceEnum = "LOW"
)

func (e RiskConfidenceEnum) ToPointer() *RiskConfidenceEnum {
	return &e
}

func (e *RiskConfidenceEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "HIGH":
		fallthrough
	case "MEDIUM":
		fallthrough
	case "LOW":
		*e = RiskConfidenceEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RiskConfidenceEnum: %v", v)
	}
}
