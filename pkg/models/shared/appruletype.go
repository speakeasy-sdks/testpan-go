// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type AppRuleTypeRuleType string

const (
	AppRuleTypeRuleTypeInjectionRuleType AppRuleTypeRuleType = "InjectionRuleType"
	AppRuleTypeRuleTypeViolationRuleType AppRuleTypeRuleType = "ViolationRuleType"
)

func (e AppRuleTypeRuleType) ToPointer() *AppRuleTypeRuleType {
	return &e
}

func (e *AppRuleTypeRuleType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "InjectionRuleType":
		fallthrough
	case "ViolationRuleType":
		*e = AppRuleTypeRuleType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AppRuleTypeRuleType: %v", v)
	}
}

// AppRuleType - identify the app rule type. Only one of the below should be not null, and  used.
type AppRuleType struct {
	RuleType AppRuleTypeRuleType `json:"ruleType"`
}

func (o *AppRuleType) GetRuleType() AppRuleTypeRuleType {
	if o == nil {
		return AppRuleTypeRuleType("")
	}
	return o.RuleType
}
