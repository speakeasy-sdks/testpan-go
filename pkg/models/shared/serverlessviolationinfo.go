// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

type ServerlessViolationInfo struct {
	DefaultRule *ServerlessDefaultRule `json:"defaultRule,omitempty"`
	// serverless rule action
	RuleAction                 *ServerlessRuleAction       `json:"ruleAction,omitempty"`
	UnidentifiedServerlessRule *UnidentifiedServerlessRule `json:"unidentifiedServerlessRule,omitempty"`
	// used for violation in ServerlessFunction
	UserRule         *ServerlessUserRule         `json:"userRule,omitempty"`
	ViolationReasons []ServerlessViolationReason `json:"violationReasons,omitempty"`
}

func (o *ServerlessViolationInfo) GetDefaultRule() *ServerlessDefaultRule {
	if o == nil {
		return nil
	}
	return o.DefaultRule
}

func (o *ServerlessViolationInfo) GetRuleAction() *ServerlessRuleAction {
	if o == nil {
		return nil
	}
	return o.RuleAction
}

func (o *ServerlessViolationInfo) GetUnidentifiedServerlessRule() *UnidentifiedServerlessRule {
	if o == nil {
		return nil
	}
	return o.UnidentifiedServerlessRule
}

func (o *ServerlessViolationInfo) GetUserRule() *ServerlessUserRule {
	if o == nil {
		return nil
	}
	return o.UserRule
}

func (o *ServerlessViolationInfo) GetViolationReasons() []ServerlessViolationReason {
	if o == nil {
		return nil
	}
	return o.ViolationReasons
}
