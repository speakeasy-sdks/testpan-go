// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/speakeasy-sdks/testpan-go/pkg/models/shared"
	"net/http"
)

// QueryParamMitreTechniqueType - MITRE technique type
type QueryParamMitreTechniqueType string

const (
	QueryParamMitreTechniqueTypeCompromisedImages               QueryParamMitreTechniqueType = "COMPROMISED_IMAGES"
	QueryParamMitreTechniqueTypeUnauthorisedRegistriesUsage     QueryParamMitreTechniqueType = "UNAUTHORISED_REGISTRIES_USAGE"
	QueryParamMitreTechniqueTypeSuspiciousDeployment            QueryParamMitreTechniqueType = "SUSPICIOUS_DEPLOYMENT"
	QueryParamMitreTechniqueTypeVulnerableApplication           QueryParamMitreTechniqueType = "VULNERABLE_APPLICATION"
	QueryParamMitreTechniqueTypeExposedK8SDashboard             QueryParamMitreTechniqueType = "EXPOSED_K8S_DASHBOARD"
	QueryParamMitreTechniqueTypeExploitPublicFacingApplication  QueryParamMitreTechniqueType = "EXPLOIT_PUBLIC_FACING_APPLICATION"
	QueryParamMitreTechniqueTypeContainerService                QueryParamMitreTechniqueType = "CONTAINER_SERVICE"
	QueryParamMitreTechniqueTypeDeployContainer                 QueryParamMitreTechniqueType = "DEPLOY_CONTAINER"
	QueryParamMitreTechniqueTypeSSHConnection                   QueryParamMitreTechniqueType = "SSH_CONNECTION"
	QueryParamMitreTechniqueTypeWriteableHostPath               QueryParamMitreTechniqueType = "WRITEABLE_HOST_PATH"
	QueryParamMitreTechniqueTypeCronJobs                        QueryParamMitreTechniqueType = "CRON_JOBS"
	QueryParamMitreTechniqueTypePrivilegedOrRootContainer       QueryParamMitreTechniqueType = "PRIVILEGED_OR_ROOT_CONTAINER"
	QueryParamMitreTechniqueTypePrivilegeEscalationEnabled      QueryParamMitreTechniqueType = "PRIVILEGE_ESCALATION_ENABLED"
	QueryParamMitreTechniqueTypeClusterAdminBinding             QueryParamMitreTechniqueType = "CLUSTER_ADMIN_BINDING"
	QueryParamMitreTechniqueTypeUnauthorizedClusterAdminBinding QueryParamMitreTechniqueType = "UNAUTHORIZED_CLUSTER_ADMIN_BINDING"
	QueryParamMitreTechniqueTypeAccessClusterResources          QueryParamMitreTechniqueType = "ACCESS_CLUSTER_RESOURCES"
	QueryParamMitreTechniqueTypeClearContainerLogs              QueryParamMitreTechniqueType = "CLEAR_CONTAINER_LOGS"
	QueryParamMitreTechniqueTypeClearK8SEvents                  QueryParamMitreTechniqueType = "CLEAR_K8S_EVENTS"
	QueryParamMitreTechniqueTypeListSecrets                     QueryParamMitreTechniqueType = "LIST_SECRETS"
	QueryParamMitreTechniqueTypeServiceAccountAccess            QueryParamMitreTechniqueType = "SERVICE_ACCOUNT_ACCESS"
	QueryParamMitreTechniqueTypeContainerResourceDiscovery      QueryParamMitreTechniqueType = "CONTAINER_RESOURCE_DISCOVERY"
	QueryParamMitreTechniqueTypeClusterInternalNetworking       QueryParamMitreTechniqueType = "CLUSTER_INTERNAL_NETWORKING"
	QueryParamMitreTechniqueTypeTillerEndpointAccess            QueryParamMitreTechniqueType = "TILLER_ENDPOINT_ACCESS"
	QueryParamMitreTechniqueTypeDataDestruction                 QueryParamMitreTechniqueType = "DATA_DESTRUCTION"
)

func (e QueryParamMitreTechniqueType) ToPointer() *QueryParamMitreTechniqueType {
	return &e
}

func (e *QueryParamMitreTechniqueType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "COMPROMISED_IMAGES":
		fallthrough
	case "UNAUTHORISED_REGISTRIES_USAGE":
		fallthrough
	case "SUSPICIOUS_DEPLOYMENT":
		fallthrough
	case "VULNERABLE_APPLICATION":
		fallthrough
	case "EXPOSED_K8S_DASHBOARD":
		fallthrough
	case "EXPLOIT_PUBLIC_FACING_APPLICATION":
		fallthrough
	case "CONTAINER_SERVICE":
		fallthrough
	case "DEPLOY_CONTAINER":
		fallthrough
	case "SSH_CONNECTION":
		fallthrough
	case "WRITEABLE_HOST_PATH":
		fallthrough
	case "CRON_JOBS":
		fallthrough
	case "PRIVILEGED_OR_ROOT_CONTAINER":
		fallthrough
	case "PRIVILEGE_ESCALATION_ENABLED":
		fallthrough
	case "CLUSTER_ADMIN_BINDING":
		fallthrough
	case "UNAUTHORIZED_CLUSTER_ADMIN_BINDING":
		fallthrough
	case "ACCESS_CLUSTER_RESOURCES":
		fallthrough
	case "CLEAR_CONTAINER_LOGS":
		fallthrough
	case "CLEAR_K8S_EVENTS":
		fallthrough
	case "LIST_SECRETS":
		fallthrough
	case "SERVICE_ACCOUNT_ACCESS":
		fallthrough
	case "CONTAINER_RESOURCE_DISCOVERY":
		fallthrough
	case "CLUSTER_INTERNAL_NETWORKING":
		fallthrough
	case "TILLER_ENDPOINT_ACCESS":
		fallthrough
	case "DATA_DESTRUCTION":
		*e = QueryParamMitreTechniqueType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for QueryParamMitreTechniqueType: %v", v)
	}
}

type PostMitreTechniqueFixRequest struct {
	MitreTechniqueFixInfo shared.MitreTechniqueFixInfo `request:"mediaType=application/json"`
	// the clusters ids to filter by
	ClustersIds []string `queryParam:"style=form,explode=true,name=clustersIds"`
	// MITRE technique type
	MitreTechniqueType QueryParamMitreTechniqueType `queryParam:"style=form,explode=true,name=mitreTechniqueType"`
}

func (o *PostMitreTechniqueFixRequest) GetMitreTechniqueFixInfo() shared.MitreTechniqueFixInfo {
	if o == nil {
		return shared.MitreTechniqueFixInfo{}
	}
	return o.MitreTechniqueFixInfo
}

func (o *PostMitreTechniqueFixRequest) GetClustersIds() []string {
	if o == nil {
		return nil
	}
	return o.ClustersIds
}

func (o *PostMitreTechniqueFixRequest) GetMitreTechniqueType() QueryParamMitreTechniqueType {
	if o == nil {
		return QueryParamMitreTechniqueType("")
	}
	return o.MitreTechniqueType
}

type PostMitreTechniqueFixResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *PostMitreTechniqueFixResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *PostMitreTechniqueFixResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *PostMitreTechniqueFixResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
