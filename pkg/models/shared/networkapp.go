// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"github.com/speakeasy-sdks/testpan-go/pkg/utils"
	"time"
)

type NetworkApp struct {
	APISecurity *NetworkAPISecurityService `json:"apiSecurity,omitempty"`
	AppID       *string                    `json:"appId,omitempty"`
	// An enumeration.
	AppRisk        *RiskSeverity               `json:"appRisk,omitempty"`
	Args           []string                    `json:"args,omitempty"`
	Cwd            *string                     `json:"cwd,omitempty"`
	EnvironmentID  *string                     `json:"environmentId,omitempty"`
	ExecutablePath *string                     `json:"executablePath,omitempty"`
	Expansion      *NetworkExpansion           `json:"expansion,omitempty"`
	HostsID        []string                    `json:"hostsId,omitempty"`
	HostsIP        []string                    `json:"hostsIp,omitempty"`
	HostsName      []string                    `json:"hostsName,omitempty"`
	ID             *string                     `json:"id,omitempty"`
	Labels         []Label                     `json:"labels,omitempty"`
	LastSeen       *time.Time                  `json:"lastSeen,omitempty"`
	LastViolation  *time.Time                  `json:"lastViolation,omitempty"`
	Name           *string                     `json:"name,omitempty"`
	Pod            *NetworkPod                 `json:"pod,omitempty"`
	Port           *string                     `json:"port,omitempty"`
	ProcessName    *string                     `json:"processName,omitempty"`
	Rule           *EnvironmentRuleBasic       `json:"rule,omitempty"`
	StartTime      *time.Time                  `json:"startTime,omitempty"`
	State          *TelemetryAvailabilityState `json:"state,omitempty"`
	Type           *string                     `json:"type,omitempty"`
}

func (n NetworkApp) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(n, "", false)
}

func (n *NetworkApp) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &n, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *NetworkApp) GetAPISecurity() *NetworkAPISecurityService {
	if o == nil {
		return nil
	}
	return o.APISecurity
}

func (o *NetworkApp) GetAppID() *string {
	if o == nil {
		return nil
	}
	return o.AppID
}

func (o *NetworkApp) GetAppRisk() *RiskSeverity {
	if o == nil {
		return nil
	}
	return o.AppRisk
}

func (o *NetworkApp) GetArgs() []string {
	if o == nil {
		return nil
	}
	return o.Args
}

func (o *NetworkApp) GetCwd() *string {
	if o == nil {
		return nil
	}
	return o.Cwd
}

func (o *NetworkApp) GetEnvironmentID() *string {
	if o == nil {
		return nil
	}
	return o.EnvironmentID
}

func (o *NetworkApp) GetExecutablePath() *string {
	if o == nil {
		return nil
	}
	return o.ExecutablePath
}

func (o *NetworkApp) GetExpansion() *NetworkExpansion {
	if o == nil {
		return nil
	}
	return o.Expansion
}

func (o *NetworkApp) GetHostsID() []string {
	if o == nil {
		return nil
	}
	return o.HostsID
}

func (o *NetworkApp) GetHostsIP() []string {
	if o == nil {
		return nil
	}
	return o.HostsIP
}

func (o *NetworkApp) GetHostsName() []string {
	if o == nil {
		return nil
	}
	return o.HostsName
}

func (o *NetworkApp) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *NetworkApp) GetLabels() []Label {
	if o == nil {
		return nil
	}
	return o.Labels
}

func (o *NetworkApp) GetLastSeen() *time.Time {
	if o == nil {
		return nil
	}
	return o.LastSeen
}

func (o *NetworkApp) GetLastViolation() *time.Time {
	if o == nil {
		return nil
	}
	return o.LastViolation
}

func (o *NetworkApp) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *NetworkApp) GetPod() *NetworkPod {
	if o == nil {
		return nil
	}
	return o.Pod
}

func (o *NetworkApp) GetPort() *string {
	if o == nil {
		return nil
	}
	return o.Port
}

func (o *NetworkApp) GetProcessName() *string {
	if o == nil {
		return nil
	}
	return o.ProcessName
}

func (o *NetworkApp) GetRule() *EnvironmentRuleBasic {
	if o == nil {
		return nil
	}
	return o.Rule
}

func (o *NetworkApp) GetStartTime() *time.Time {
	if o == nil {
		return nil
	}
	return o.StartTime
}

func (o *NetworkApp) GetState() *TelemetryAvailabilityState {
	if o == nil {
		return nil
	}
	return o.State
}

func (o *NetworkApp) GetType() *string {
	if o == nil {
		return nil
	}
	return o.Type
}
