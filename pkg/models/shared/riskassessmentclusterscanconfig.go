// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"github.com/speakeasy-sdks/testpan-go/pkg/utils"
)

// RiskAssessmentClusterScanConfig - Single cluster risk assessment scan config
type RiskAssessmentClusterScanConfig struct {
	MaxParallelism        int64                  `json:"maxParallelism"`
	MinimumSeverity       VulnerabilitySeverity  `json:"minimumSeverity"`
	Namespaces            []string               `json:"namespaces,omitempty"`
	PeriodicJobExpression *PeriodicJobExpression `json:"periodicJobExpression,omitempty"`
	RunDockerfileScan     *bool                  `default:"false" json:"runDockerfileScan"`
}

func (r RiskAssessmentClusterScanConfig) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(r, "", false)
}

func (r *RiskAssessmentClusterScanConfig) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &r, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *RiskAssessmentClusterScanConfig) GetMaxParallelism() int64 {
	if o == nil {
		return 0
	}
	return o.MaxParallelism
}

func (o *RiskAssessmentClusterScanConfig) GetMinimumSeverity() VulnerabilitySeverity {
	if o == nil {
		return VulnerabilitySeverity("")
	}
	return o.MinimumSeverity
}

func (o *RiskAssessmentClusterScanConfig) GetNamespaces() []string {
	if o == nil {
		return nil
	}
	return o.Namespaces
}

func (o *RiskAssessmentClusterScanConfig) GetPeriodicJobExpression() *PeriodicJobExpression {
	if o == nil {
		return nil
	}
	return o.PeriodicJobExpression
}

func (o *RiskAssessmentClusterScanConfig) GetRunDockerfileScan() *bool {
	if o == nil {
		return nil
	}
	return o.RunDockerfileScan
}
