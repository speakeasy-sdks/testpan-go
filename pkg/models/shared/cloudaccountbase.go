// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/speakeasy-sdks/testpan-go/pkg/utils"
	"time"
)

type CloudAccountBaseValidateFunction string

const (
	CloudAccountBaseValidateFunctionHashValidation      CloudAccountBaseValidateFunction = "HASH_VALIDATION"
	CloudAccountBaseValidateFunctionSignatureValidation CloudAccountBaseValidateFunction = "SIGNATURE_VALIDATION"
	CloudAccountBaseValidateFunctionNone                CloudAccountBaseValidateFunction = "NONE"
)

func (e CloudAccountBaseValidateFunction) ToPointer() *CloudAccountBaseValidateFunction {
	return &e
}

func (e *CloudAccountBaseValidateFunction) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "HASH_VALIDATION":
		fallthrough
	case "SIGNATURE_VALIDATION":
		fallthrough
	case "NONE":
		*e = CloudAccountBaseValidateFunction(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CloudAccountBaseValidateFunction: %v", v)
	}
}

// CloudAccountBase - represent cloud account object
type CloudAccountBase struct {
	// the identifier id from the cloud account provider. account ID for AWS and subscription ID in Azure
	CloudAccountID              *string                           `json:"cloudAccountId,omitempty"`
	CloudProvider               *CloudProviderType                `json:"cloudProvider,omitempty"`
	ID                          *string                           `json:"id,omitempty"`
	InstallVulnerabilityScanner *bool                             `default:"false" json:"installVulnerabilityScanner"`
	LastScanned                 *time.Time                        `json:"lastScanned,omitempty"`
	Name                        *string                           `json:"name,omitempty"`
	Regions                     []string                          `json:"regions,omitempty"`
	ValidateFunction            *CloudAccountBaseValidateFunction `json:"validateFunction,omitempty"`
}

func (c CloudAccountBase) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CloudAccountBase) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CloudAccountBase) GetCloudAccountID() *string {
	if o == nil {
		return nil
	}
	return o.CloudAccountID
}

func (o *CloudAccountBase) GetCloudProvider() *CloudProviderType {
	if o == nil {
		return nil
	}
	return o.CloudProvider
}

func (o *CloudAccountBase) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *CloudAccountBase) GetInstallVulnerabilityScanner() *bool {
	if o == nil {
		return nil
	}
	return o.InstallVulnerabilityScanner
}

func (o *CloudAccountBase) GetLastScanned() *time.Time {
	if o == nil {
		return nil
	}
	return o.LastScanned
}

func (o *CloudAccountBase) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *CloudAccountBase) GetRegions() []string {
	if o == nil {
		return nil
	}
	return o.Regions
}

func (o *CloudAccountBase) GetValidateFunction() *CloudAccountBaseValidateFunction {
	if o == nil {
		return nil
	}
	return o.ValidateFunction
}
