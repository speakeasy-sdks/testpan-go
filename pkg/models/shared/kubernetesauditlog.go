// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"github.com/speakeasy-sdks/testpan-go/pkg/utils"
	"time"
)

// KubernetesAuditLog - Single kubernetes audit log
type KubernetesAuditLog struct {
	Action          *KubernetesAuditLogAction   `json:"action,omitempty"`
	ClusterID       *string                     `json:"clusterId,omitempty"`
	ClusterName     *string                     `json:"clusterName,omitempty"`
	EnvironmentID   *string                     `json:"environmentId,omitempty"`
	EnvironmentName *string                     `json:"environmentName,omitempty"`
	FirstSeen       *time.Time                  `json:"firstSeen,omitempty"`
	LastSeen        *time.Time                  `json:"lastSeen,omitempty"`
	Namespace       *string                     `json:"namespace,omitempty"`
	ResourceGroup   *string                     `json:"resourceGroup,omitempty"`
	ResourceKind    *string                     `json:"resourceKind,omitempty"`
	ResourceName    *string                     `json:"resourceName,omitempty"`
	Total           *int64                      `json:"total,omitempty"`
	User            *string                     `json:"user,omitempty"`
	UserGroups      []string                    `json:"userGroups,omitempty"`
	UserNamespace   *string                     `json:"userNamespace,omitempty"`
	UserType        *KubernetesAuditLogUserType `json:"userType,omitempty"`
	Violation       *KubernetesAPIViolation     `json:"violation,omitempty"`
}

func (k KubernetesAuditLog) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(k, "", false)
}

func (k *KubernetesAuditLog) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &k, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *KubernetesAuditLog) GetAction() *KubernetesAuditLogAction {
	if o == nil {
		return nil
	}
	return o.Action
}

func (o *KubernetesAuditLog) GetClusterID() *string {
	if o == nil {
		return nil
	}
	return o.ClusterID
}

func (o *KubernetesAuditLog) GetClusterName() *string {
	if o == nil {
		return nil
	}
	return o.ClusterName
}

func (o *KubernetesAuditLog) GetEnvironmentID() *string {
	if o == nil {
		return nil
	}
	return o.EnvironmentID
}

func (o *KubernetesAuditLog) GetEnvironmentName() *string {
	if o == nil {
		return nil
	}
	return o.EnvironmentName
}

func (o *KubernetesAuditLog) GetFirstSeen() *time.Time {
	if o == nil {
		return nil
	}
	return o.FirstSeen
}

func (o *KubernetesAuditLog) GetLastSeen() *time.Time {
	if o == nil {
		return nil
	}
	return o.LastSeen
}

func (o *KubernetesAuditLog) GetNamespace() *string {
	if o == nil {
		return nil
	}
	return o.Namespace
}

func (o *KubernetesAuditLog) GetResourceGroup() *string {
	if o == nil {
		return nil
	}
	return o.ResourceGroup
}

func (o *KubernetesAuditLog) GetResourceKind() *string {
	if o == nil {
		return nil
	}
	return o.ResourceKind
}

func (o *KubernetesAuditLog) GetResourceName() *string {
	if o == nil {
		return nil
	}
	return o.ResourceName
}

func (o *KubernetesAuditLog) GetTotal() *int64 {
	if o == nil {
		return nil
	}
	return o.Total
}

func (o *KubernetesAuditLog) GetUser() *string {
	if o == nil {
		return nil
	}
	return o.User
}

func (o *KubernetesAuditLog) GetUserGroups() []string {
	if o == nil {
		return nil
	}
	return o.UserGroups
}

func (o *KubernetesAuditLog) GetUserNamespace() *string {
	if o == nil {
		return nil
	}
	return o.UserNamespace
}

func (o *KubernetesAuditLog) GetUserType() *KubernetesAuditLogUserType {
	if o == nil {
		return nil
	}
	return o.UserType
}

func (o *KubernetesAuditLog) GetViolation() *KubernetesAPIViolation {
	if o == nil {
		return nil
	}
	return o.Violation
}
