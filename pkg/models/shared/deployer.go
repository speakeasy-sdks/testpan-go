// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type DeployerDeployerType string

const (
	DeployerDeployerTypeOperatorDeployer DeployerDeployerType = "OperatorDeployer"
	DeployerDeployerTypeSecureCnDeployer DeployerDeployerType = "SecureCnDeployer"
)

func (e DeployerDeployerType) ToPointer() *DeployerDeployerType {
	return &e
}

func (e *DeployerDeployerType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "OperatorDeployer":
		fallthrough
	case "SecureCnDeployer":
		*e = DeployerDeployerType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeployerDeployerType: %v", v)
	}
}

// DeployerInput - represent deployer object
type DeployerInput struct {
	Deployer     *string              `json:"deployer,omitempty"`
	DeployerID   string               `json:"deployerId"`
	DeployerType DeployerDeployerType `json:"deployerType"`
}

func (o *DeployerInput) GetDeployer() *string {
	if o == nil {
		return nil
	}
	return o.Deployer
}

func (o *DeployerInput) GetDeployerID() string {
	if o == nil {
		return ""
	}
	return o.DeployerID
}

func (o *DeployerInput) GetDeployerType() DeployerDeployerType {
	if o == nil {
		return DeployerDeployerType("")
	}
	return o.DeployerType
}

// Deployer - represent deployer object
type Deployer struct {
	Deployer     *string              `json:"deployer,omitempty"`
	DeployerID   string               `json:"deployerId"`
	DeployerType DeployerDeployerType `json:"deployerType"`
	ID           *string              `json:"id,omitempty"`
}

func (o *Deployer) GetDeployer() *string {
	if o == nil {
		return nil
	}
	return o.Deployer
}

func (o *Deployer) GetDeployerID() string {
	if o == nil {
		return ""
	}
	return o.DeployerID
}

func (o *Deployer) GetDeployerType() DeployerDeployerType {
	if o == nil {
		return DeployerDeployerType("")
	}
	return o.DeployerType
}

func (o *Deployer) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}
