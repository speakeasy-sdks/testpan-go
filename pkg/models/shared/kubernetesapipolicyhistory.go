// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"github.com/speakeasy-sdks/testpan-go/pkg/utils"
	"time"
)

type KubernetesAPIPolicyHistory struct {
	Editor     *string              `json:"editor,omitempty"`
	Policy     *KubernetesAPIPolicy `json:"policy,omitempty"`
	UpdateTime *time.Time           `json:"updateTime,omitempty"`
}

func (k KubernetesAPIPolicyHistory) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(k, "", false)
}

func (k *KubernetesAPIPolicyHistory) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &k, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *KubernetesAPIPolicyHistory) GetEditor() *string {
	if o == nil {
		return nil
	}
	return o.Editor
}

func (o *KubernetesAPIPolicyHistory) GetPolicy() *KubernetesAPIPolicy {
	if o == nil {
		return nil
	}
	return o.Policy
}

func (o *KubernetesAPIPolicyHistory) GetUpdateTime() *time.Time {
	if o == nil {
		return nil
	}
	return o.UpdateTime
}
