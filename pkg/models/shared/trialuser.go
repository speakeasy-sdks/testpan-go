// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type TrialUserHowDidYouHearAboutUs string

const (
	TrialUserHowDidYouHearAboutUsColleaguesRecommendation TrialUserHowDidYouHearAboutUs = "COLLEAGUES_RECOMMENDATION"
	TrialUserHowDidYouHearAboutUsKubeconConference        TrialUserHowDidYouHearAboutUs = "KUBECON_CONFERENCE"
	TrialUserHowDidYouHearAboutUsPastClient               TrialUserHowDidYouHearAboutUs = "PAST_CLIENT"
	TrialUserHowDidYouHearAboutUsAdvertising              TrialUserHowDidYouHearAboutUs = "ADVERTISING"
	TrialUserHowDidYouHearAboutUsSearchEngine             TrialUserHowDidYouHearAboutUs = "SEARCH_ENGINE"
	TrialUserHowDidYouHearAboutUsBlog                     TrialUserHowDidYouHearAboutUs = "BLOG"
)

func (e TrialUserHowDidYouHearAboutUs) ToPointer() *TrialUserHowDidYouHearAboutUs {
	return &e
}

func (e *TrialUserHowDidYouHearAboutUs) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "COLLEAGUES_RECOMMENDATION":
		fallthrough
	case "KUBECON_CONFERENCE":
		fallthrough
	case "PAST_CLIENT":
		fallthrough
	case "ADVERTISING":
		fallthrough
	case "SEARCH_ENGINE":
		fallthrough
	case "BLOG":
		*e = TrialUserHowDidYouHearAboutUs(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TrialUserHowDidYouHearAboutUs: %v", v)
	}
}

type TrialUser struct {
	Company                                     *string                        `json:"company,omitempty"`
	Email                                       string                         `json:"email"`
	FirstName                                   string                         `json:"firstName"`
	HowDidYouHearAboutUs                        *TrialUserHowDidYouHearAboutUs `json:"howDidYouHearAboutUs,omitempty"`
	JobTitle                                    *string                        `json:"jobTitle,omitempty"`
	LastName                                    string                         `json:"lastName"`
	PrivacyPolicyAndTermsAndConditionsAgreement bool                           `json:"privacyPolicyAndTermsAndConditionsAgreement"`
}

func (o *TrialUser) GetCompany() *string {
	if o == nil {
		return nil
	}
	return o.Company
}

func (o *TrialUser) GetEmail() string {
	if o == nil {
		return ""
	}
	return o.Email
}

func (o *TrialUser) GetFirstName() string {
	if o == nil {
		return ""
	}
	return o.FirstName
}

func (o *TrialUser) GetHowDidYouHearAboutUs() *TrialUserHowDidYouHearAboutUs {
	if o == nil {
		return nil
	}
	return o.HowDidYouHearAboutUs
}

func (o *TrialUser) GetJobTitle() *string {
	if o == nil {
		return nil
	}
	return o.JobTitle
}

func (o *TrialUser) GetLastName() string {
	if o == nil {
		return ""
	}
	return o.LastName
}

func (o *TrialUser) GetPrivacyPolicyAndTermsAndConditionsAgreement() bool {
	if o == nil {
		return false
	}
	return o.PrivacyPolicyAndTermsAndConditionsAgreement
}
