// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// APISecurityRiskSeverity - An `enum`eration.
type APISecurityRiskSeverity string

const (
	APISecurityRiskSeverityNoRisk   APISecurityRiskSeverity = "NO_RISK"
	APISecurityRiskSeverityUnknown  APISecurityRiskSeverity = "UNKNOWN"
	APISecurityRiskSeverityNeutral  APISecurityRiskSeverity = "NEUTRAL"
	APISecurityRiskSeverityLow      APISecurityRiskSeverity = "LOW"
	APISecurityRiskSeverityMedium   APISecurityRiskSeverity = "MEDIUM"
	APISecurityRiskSeverityHigh     APISecurityRiskSeverity = "HIGH"
	APISecurityRiskSeverityCritical APISecurityRiskSeverity = "CRITICAL"
)

func (e APISecurityRiskSeverity) ToPointer() *APISecurityRiskSeverity {
	return &e
}

func (e *APISecurityRiskSeverity) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NO_RISK":
		fallthrough
	case "UNKNOWN":
		fallthrough
	case "NEUTRAL":
		fallthrough
	case "LOW":
		fallthrough
	case "MEDIUM":
		fallthrough
	case "HIGH":
		fallthrough
	case "CRITICAL":
		*e = APISecurityRiskSeverity(v)
		return nil
	default:
		return fmt.Errorf("invalid value for APISecurityRiskSeverity: %v", v)
	}
}
