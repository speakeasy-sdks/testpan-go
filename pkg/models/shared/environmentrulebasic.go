// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

type EnvironmentRuleBasic struct {
	// App rule action
	Action           *AppRuleAction      `json:"action,omitempty"`
	Comment          *string             `json:"comment,omitempty"`
	ID               *string             `json:"id,omitempty"`
	IsRuleActive     *bool               `json:"isRuleActive,omitempty"`
	Name             *string             `json:"name,omitempty"`
	RuleType         *NetworkAppRuleType `json:"ruleType,omitempty"`
	ViolationReasons []ViolationReason   `json:"violationReasons,omitempty"`
}

func (o *EnvironmentRuleBasic) GetAction() *AppRuleAction {
	if o == nil {
		return nil
	}
	return o.Action
}

func (o *EnvironmentRuleBasic) GetComment() *string {
	if o == nil {
		return nil
	}
	return o.Comment
}

func (o *EnvironmentRuleBasic) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *EnvironmentRuleBasic) GetIsRuleActive() *bool {
	if o == nil {
		return nil
	}
	return o.IsRuleActive
}

func (o *EnvironmentRuleBasic) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *EnvironmentRuleBasic) GetRuleType() *NetworkAppRuleType {
	if o == nil {
		return nil
	}
	return o.RuleType
}

func (o *EnvironmentRuleBasic) GetViolationReasons() []ViolationReason {
	if o == nil {
		return nil
	}
	return o.ViolationReasons
}
