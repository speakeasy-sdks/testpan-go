// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy-sdks/testpan-go/pkg/models/shared"
	"net/http"
)

type PostUsersTrialRequest struct {
	TrialUser shared.TrialUser `request:"mediaType=application/json"`
	// google recaptcha response
	GRecaptchaResponse string `header:"style=simple,explode=false,name=g-recaptcha-response"`
}

func (o *PostUsersTrialRequest) GetTrialUser() shared.TrialUser {
	if o == nil {
		return shared.TrialUser{}
	}
	return o.TrialUser
}

func (o *PostUsersTrialRequest) GetGRecaptchaResponse() string {
	if o == nil {
		return ""
	}
	return o.GRecaptchaResponse
}

type PostUsersTrialResponse struct {
	// unknown error
	APIResponse *shared.APIResponse
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// The new trial user that was created
	User *shared.User
}

func (o *PostUsersTrialResponse) GetAPIResponse() *shared.APIResponse {
	if o == nil {
		return nil
	}
	return o.APIResponse
}

func (o *PostUsersTrialResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *PostUsersTrialResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *PostUsersTrialResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *PostUsersTrialResponse) GetUser() *shared.User {
	if o == nil {
		return nil
	}
	return o.User
}
