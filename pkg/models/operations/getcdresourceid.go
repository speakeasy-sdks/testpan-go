// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/speakeasy-sdks/testpan-go/pkg/models/shared"
	"github.com/speakeasy-sdks/testpan-go/pkg/types"
	"github.com/speakeasy-sdks/testpan-go/pkg/utils"
	"net/http"
)

// GetCdResourceIDSortDir - sorting direction
type GetCdResourceIDSortDir string

const (
	GetCdResourceIDSortDirAsc  GetCdResourceIDSortDir = "ASC"
	GetCdResourceIDSortDirDesc GetCdResourceIDSortDir = "DESC"
)

func (e GetCdResourceIDSortDir) ToPointer() *GetCdResourceIDSortDir {
	return &e
}

func (e *GetCdResourceIDSortDir) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ASC":
		fallthrough
	case "DESC":
		*e = GetCdResourceIDSortDir(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetCdResourceIDSortDir: %v", v)
	}
}

type GetCdResourceIDRequest struct {
	ResourceID string `pathParam:"style=simple,explode=false,name=resourceId"`
	// sorting direction
	SortDir *GetCdResourceIDSortDir `default:"ASC" queryParam:"style=form,explode=true,name=sortDir"`
	// sort key
	sortKey *string `const:"risk" queryParam:"style=form,explode=true,name=sortKey"`
}

func (g GetCdResourceIDRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetCdResourceIDRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *GetCdResourceIDRequest) GetResourceID() string {
	if o == nil {
		return ""
	}
	return o.ResourceID
}

func (o *GetCdResourceIDRequest) GetSortDir() *GetCdResourceIDSortDir {
	if o == nil {
		return nil
	}
	return o.SortDir
}

func (o *GetCdResourceIDRequest) GetSortKey() *string {
	return types.String("risk")
}

type GetCdResourceIDResponse struct {
	// Success
	CdPipelineResourceResult *shared.CdPipelineResourceResult
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *GetCdResourceIDResponse) GetCdPipelineResourceResult() *shared.CdPipelineResourceResult {
	if o == nil {
		return nil
	}
	return o.CdPipelineResourceResult
}

func (o *GetCdResourceIDResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetCdResourceIDResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetCdResourceIDResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
