// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// RiskSeverity - An enumeration.
type RiskSeverity string

const (
	RiskSeverityLow      RiskSeverity = "LOW"
	RiskSeverityMedium   RiskSeverity = "MEDIUM"
	RiskSeverityHigh     RiskSeverity = "HIGH"
	RiskSeverityCritical RiskSeverity = "CRITICAL"
	RiskSeverityNeutral  RiskSeverity = "NEUTRAL"
	RiskSeverityUnknown  RiskSeverity = "UNKNOWN"
	RiskSeverityNoRisk   RiskSeverity = "NO_RISK"
)

func (e RiskSeverity) ToPointer() *RiskSeverity {
	return &e
}

func (e *RiskSeverity) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "LOW":
		fallthrough
	case "MEDIUM":
		fallthrough
	case "HIGH":
		fallthrough
	case "CRITICAL":
		fallthrough
	case "NEUTRAL":
		fallthrough
	case "UNKNOWN":
		fallthrough
	case "NO_RISK":
		*e = RiskSeverity(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RiskSeverity: %v", v)
	}
}
