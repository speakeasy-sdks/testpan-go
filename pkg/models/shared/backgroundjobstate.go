// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type BackgroundJobState string

const (
	BackgroundJobStateNew        BackgroundJobState = "NEW"
	BackgroundJobStateProcessing BackgroundJobState = "PROCESSING"
	BackgroundJobStateDone       BackgroundJobState = "DONE"
	BackgroundJobStateFailed     BackgroundJobState = "FAILED"
	BackgroundJobStateNone       BackgroundJobState = "NONE"
)

func (e BackgroundJobState) ToPointer() *BackgroundJobState {
	return &e
}

func (e *BackgroundJobState) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NEW":
		fallthrough
	case "PROCESSING":
		fallthrough
	case "DONE":
		fallthrough
	case "FAILED":
		fallthrough
	case "NONE":
		*e = BackgroundJobState(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BackgroundJobState: %v", v)
	}
}
