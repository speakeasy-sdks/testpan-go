// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"github.com/speakeasy-sdks/testpan-go/pkg/utils"
	"time"
)

// ExpansionInput - represent expansion object
type ExpansionInput struct {
	ClusterID string `json:"clusterId"`
	// The last time that the agent sent telemetries
	ControllerLastActive *time.Time        `json:"controllerLastActive,omitempty"`
	Labels               []Label           `json:"labels,omitempty"`
	Name                 string            `json:"name"`
	NamespaceID          string            `json:"namespaceId"`
	ShouldSendMetrics    *bool             `json:"shouldSendMetrics,omitempty"`
	WorkloadAddresses    []WorkloadAddress `json:"workloadAddresses"`
}

func (e ExpansionInput) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(e, "", false)
}

func (e *ExpansionInput) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &e, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ExpansionInput) GetClusterID() string {
	if o == nil {
		return ""
	}
	return o.ClusterID
}

func (o *ExpansionInput) GetControllerLastActive() *time.Time {
	if o == nil {
		return nil
	}
	return o.ControllerLastActive
}

func (o *ExpansionInput) GetLabels() []Label {
	if o == nil {
		return nil
	}
	return o.Labels
}

func (o *ExpansionInput) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *ExpansionInput) GetNamespaceID() string {
	if o == nil {
		return ""
	}
	return o.NamespaceID
}

func (o *ExpansionInput) GetShouldSendMetrics() *bool {
	if o == nil {
		return nil
	}
	return o.ShouldSendMetrics
}

func (o *ExpansionInput) GetWorkloadAddresses() []WorkloadAddress {
	if o == nil {
		return []WorkloadAddress{}
	}
	return o.WorkloadAddresses
}
