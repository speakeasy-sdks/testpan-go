// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type DefaultRule string

const (
	DefaultRuleAllowAll  DefaultRule = "ALLOW_ALL"
	DefaultRuleDetectAll DefaultRule = "DETECT_ALL"
	DefaultRuleBlockAll  DefaultRule = "BLOCK_ALL"
)

func (e DefaultRule) ToPointer() *DefaultRule {
	return &e
}

func (e *DefaultRule) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ALLOW_ALL":
		fallthrough
	case "DETECT_ALL":
		fallthrough
	case "BLOCK_ALL":
		*e = DefaultRule(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DefaultRule: %v", v)
	}
}
