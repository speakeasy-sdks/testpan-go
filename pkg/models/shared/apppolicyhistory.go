// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"github.com/speakeasy-sdks/testpan-go/pkg/utils"
	"time"
)

type AppPolicyHistory struct {
	Editor     *string    `json:"editor,omitempty"`
	Policy     *AppPolicy `json:"policy,omitempty"`
	UpdateTime *time.Time `json:"updateTime,omitempty"`
}

func (a AppPolicyHistory) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *AppPolicyHistory) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *AppPolicyHistory) GetEditor() *string {
	if o == nil {
		return nil
	}
	return o.Editor
}

func (o *AppPolicyHistory) GetPolicy() *AppPolicy {
	if o == nil {
		return nil
	}
	return o.Policy
}

func (o *AppPolicyHistory) GetUpdateTime() *time.Time {
	if o == nil {
		return nil
	}
	return o.UpdateTime
}
