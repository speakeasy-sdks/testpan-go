// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type WorkloadRuleScopeTypeEnum string

const (
	WorkloadRuleScopeTypeEnumAnyRuleType             WorkloadRuleScopeTypeEnum = "AnyRuleType"
	WorkloadRuleScopeTypeEnumClusterNameRuleType     WorkloadRuleScopeTypeEnum = "ClusterNameRuleType"
	WorkloadRuleScopeTypeEnumEnvironmentNameRuleType WorkloadRuleScopeTypeEnum = "EnvironmentNameRuleType"
)

func (e WorkloadRuleScopeTypeEnum) ToPointer() *WorkloadRuleScopeTypeEnum {
	return &e
}

func (e *WorkloadRuleScopeTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AnyRuleType":
		fallthrough
	case "ClusterNameRuleType":
		fallthrough
	case "EnvironmentNameRuleType":
		*e = WorkloadRuleScopeTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for WorkloadRuleScopeTypeEnum: %v", v)
	}
}
