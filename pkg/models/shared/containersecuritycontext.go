// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

type ContainerSecurityContext struct {
	AllowPrivilegeEscalation *bool    `json:"allowPrivilegeEscalation,omitempty"`
	CapabilitiesAdd          []string `json:"capabilitiesAdd,omitempty"`
	CapabilitiesDrop         []string `json:"capabilitiesDrop,omitempty"`
	Name                     *string  `json:"name,omitempty"`
	Privileged               *bool    `json:"privileged,omitempty"`
	ProcMount                *string  `json:"procMount,omitempty"`
	ReadOnlyRootFilesystem   *bool    `json:"readOnlyRootFilesystem,omitempty"`
	RunAsGroup               *int64   `json:"runAsGroup,omitempty"`
	RunAsNonRoot             *bool    `json:"runAsNonRoot,omitempty"`
	RunAsUser                *int64   `json:"runAsUser,omitempty"`
}

func (o *ContainerSecurityContext) GetAllowPrivilegeEscalation() *bool {
	if o == nil {
		return nil
	}
	return o.AllowPrivilegeEscalation
}

func (o *ContainerSecurityContext) GetCapabilitiesAdd() []string {
	if o == nil {
		return nil
	}
	return o.CapabilitiesAdd
}

func (o *ContainerSecurityContext) GetCapabilitiesDrop() []string {
	if o == nil {
		return nil
	}
	return o.CapabilitiesDrop
}

func (o *ContainerSecurityContext) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *ContainerSecurityContext) GetPrivileged() *bool {
	if o == nil {
		return nil
	}
	return o.Privileged
}

func (o *ContainerSecurityContext) GetProcMount() *string {
	if o == nil {
		return nil
	}
	return o.ProcMount
}

func (o *ContainerSecurityContext) GetReadOnlyRootFilesystem() *bool {
	if o == nil {
		return nil
	}
	return o.ReadOnlyRootFilesystem
}

func (o *ContainerSecurityContext) GetRunAsGroup() *int64 {
	if o == nil {
		return nil
	}
	return o.RunAsGroup
}

func (o *ContainerSecurityContext) GetRunAsNonRoot() *bool {
	if o == nil {
		return nil
	}
	return o.RunAsNonRoot
}

func (o *ContainerSecurityContext) GetRunAsUser() *int64 {
	if o == nil {
		return nil
	}
	return o.RunAsUser
}
