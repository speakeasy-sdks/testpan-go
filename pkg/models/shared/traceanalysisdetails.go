// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"github.com/speakeasy-sdks/testpan-go/pkg/utils"
	"time"
)

type TraceAnalysisDetails struct {
	EndTime  *time.Time             `json:"endTime,omitempty"`
	Findings []TraceAnalysisFinding `json:"findings,omitempty"`
	Status   *TraceAnalysisStatus   `json:"status,omitempty"`
}

func (t TraceAnalysisDetails) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TraceAnalysisDetails) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TraceAnalysisDetails) GetEndTime() *time.Time {
	if o == nil {
		return nil
	}
	return o.EndTime
}

func (o *TraceAnalysisDetails) GetFindings() []TraceAnalysisFinding {
	if o == nil {
		return nil
	}
	return o.Findings
}

func (o *TraceAnalysisDetails) GetStatus() *TraceAnalysisStatus {
	if o == nil {
		return nil
	}
	return o.Status
}
