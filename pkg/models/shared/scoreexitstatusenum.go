// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ScoreExitStatusEnum - An enumeration.
type ScoreExitStatusEnum string

const (
	ScoreExitStatusEnumSuccess        ScoreExitStatusEnum = "SUCCESS"
	ScoreExitStatusEnumNetworkFailure ScoreExitStatusEnum = "NETWORK_FAILURE"
	ScoreExitStatusEnumTooLong        ScoreExitStatusEnum = "TOO_LONG"
	ScoreExitStatusEnumParseError     ScoreExitStatusEnum = "PARSE_ERROR"
	ScoreExitStatusEnumGenericFailure ScoreExitStatusEnum = "GENERIC_FAILURE"
)

func (e ScoreExitStatusEnum) ToPointer() *ScoreExitStatusEnum {
	return &e
}

func (e *ScoreExitStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SUCCESS":
		fallthrough
	case "NETWORK_FAILURE":
		fallthrough
	case "TOO_LONG":
		fallthrough
	case "PARSE_ERROR":
		fallthrough
	case "GENERIC_FAILURE":
		*e = ScoreExitStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ScoreExitStatusEnum: %v", v)
	}
}
