// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"github.com/speakeasy-sdks/testpan-go/pkg/utils"
)

type ConnectionRuleBasic struct {
	// ENCRYPT is not allowed in default rule
	Action       ConnectionRuleAction       `json:"action"`
	GroupName    *string                    `json:"groupName,omitempty"`
	ID           *string                    `json:"id,omitempty"`
	IsRuleActive *bool                      `json:"isRuleActive,omitempty"`
	Name         string                     `json:"name"`
	RuleOrigin   *ConnectionRuleOrigin      `default:"USER" json:"ruleOrigin"`
	RuleType     *NetworkConnectionRuleType `json:"ruleType,omitempty"`
}

func (c ConnectionRuleBasic) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *ConnectionRuleBasic) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ConnectionRuleBasic) GetAction() ConnectionRuleAction {
	if o == nil {
		return ConnectionRuleAction("")
	}
	return o.Action
}

func (o *ConnectionRuleBasic) GetGroupName() *string {
	if o == nil {
		return nil
	}
	return o.GroupName
}

func (o *ConnectionRuleBasic) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *ConnectionRuleBasic) GetIsRuleActive() *bool {
	if o == nil {
		return nil
	}
	return o.IsRuleActive
}

func (o *ConnectionRuleBasic) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *ConnectionRuleBasic) GetRuleOrigin() *ConnectionRuleOrigin {
	if o == nil {
		return nil
	}
	return o.RuleOrigin
}

func (o *ConnectionRuleBasic) GetRuleType() *NetworkConnectionRuleType {
	if o == nil {
		return nil
	}
	return o.RuleType
}
