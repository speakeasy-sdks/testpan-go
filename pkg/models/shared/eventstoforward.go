// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type EventsToForward string

const (
	EventsToForwardNotification           EventsToForward = "NOTIFICATION"
	EventsToForwardAdministrative         EventsToForward = "ADMINISTRATIVE"
	EventsToForwardAlert                  EventsToForward = "ALERT"
	EventsToForwardVulnerability          EventsToForward = "VULNERABILITY"
	EventsToForwardAttackPath             EventsToForward = "ATTACK_PATH"
	EventsToForwardMalware                EventsToForward = "MALWARE"
	EventsToForwardKubernetesRuntime      EventsToForward = "KUBERNETES_RUNTIME"
	EventsToForwardSecurityFindings       EventsToForward = "SECURITY_FINDINGS"
	EventsToForwardAttackSurfaceDiscovery EventsToForward = "ATTACK_SURFACE_DISCOVERY"
)

func (e EventsToForward) ToPointer() *EventsToForward {
	return &e
}

func (e *EventsToForward) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NOTIFICATION":
		fallthrough
	case "ADMINISTRATIVE":
		fallthrough
	case "ALERT":
		fallthrough
	case "VULNERABILITY":
		fallthrough
	case "ATTACK_PATH":
		fallthrough
	case "MALWARE":
		fallthrough
	case "KUBERNETES_RUNTIME":
		fallthrough
	case "SECURITY_FINDINGS":
		fallthrough
	case "ATTACK_SURFACE_DISCOVERY":
		*e = EventsToForward(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EventsToForward: %v", v)
	}
}
