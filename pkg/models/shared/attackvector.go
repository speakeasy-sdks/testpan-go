// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type AttackVector string

const (
	AttackVectorNetwork         AttackVector = "NETWORK"
	AttackVectorAdjacentNetwork AttackVector = "ADJACENT_NETWORK"
	AttackVectorLocal           AttackVector = "LOCAL"
	AttackVectorPhysical        AttackVector = "PHYSICAL"
)

func (e AttackVector) ToPointer() *AttackVector {
	return &e
}

func (e *AttackVector) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NETWORK":
		fallthrough
	case "ADJACENT_NETWORK":
		fallthrough
	case "LOCAL":
		fallthrough
	case "PHYSICAL":
		*e = AttackVector(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AttackVector: %v", v)
	}
}
