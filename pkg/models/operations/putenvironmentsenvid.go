// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy-sdks/testpan-go/pkg/models/shared"
	"net/http"
)

type PutEnvironmentsEnvIDRequest struct {
	// Environment definition
	EnvironmentInput shared.EnvironmentInput `request:"mediaType=application/json"`
	EnvID            string                  `pathParam:"style=simple,explode=false,name=envId"`
}

func (o *PutEnvironmentsEnvIDRequest) GetEnvironmentInput() shared.EnvironmentInput {
	if o == nil {
		return shared.EnvironmentInput{}
	}
	return o.EnvironmentInput
}

func (o *PutEnvironmentsEnvIDRequest) GetEnvID() string {
	if o == nil {
		return ""
	}
	return o.EnvID
}

type PutEnvironmentsEnvIDResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// Success
	Environment *shared.Environment
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *PutEnvironmentsEnvIDResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *PutEnvironmentsEnvIDResponse) GetEnvironment() *shared.Environment {
	if o == nil {
		return nil
	}
	return o.Environment
}

func (o *PutEnvironmentsEnvIDResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *PutEnvironmentsEnvIDResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
