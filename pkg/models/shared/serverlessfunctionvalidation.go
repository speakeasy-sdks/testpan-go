// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

type ServerlessFunctionValidation struct {
	DataAccessRisk         *ServerlessDataAccessRisk         `json:"dataAccessRisk,omitempty"`
	FunctionPermissionRisk *ServerlessPolicyRisk             `json:"functionPermissionRisk,omitempty"`
	IsUnusedFunction       *bool                             `json:"isUnusedFunction,omitempty"`
	PubliclyAccessibleRisk *ServerlessPubliclyAccessibleRisk `json:"publiclyAccessibleRisk,omitempty"`
	Risk                   *ServerlessFunctionRiskLevel      `json:"risk,omitempty"`
	SecretsRisk            *ServerlessSecretsRisk            `json:"secretsRisk,omitempty"`
	Vulnerability          *VulnerabilitySeverity            `json:"vulnerability,omitempty"`
}

func (o *ServerlessFunctionValidation) GetDataAccessRisk() *ServerlessDataAccessRisk {
	if o == nil {
		return nil
	}
	return o.DataAccessRisk
}

func (o *ServerlessFunctionValidation) GetFunctionPermissionRisk() *ServerlessPolicyRisk {
	if o == nil {
		return nil
	}
	return o.FunctionPermissionRisk
}

func (o *ServerlessFunctionValidation) GetIsUnusedFunction() *bool {
	if o == nil {
		return nil
	}
	return o.IsUnusedFunction
}

func (o *ServerlessFunctionValidation) GetPubliclyAccessibleRisk() *ServerlessPubliclyAccessibleRisk {
	if o == nil {
		return nil
	}
	return o.PubliclyAccessibleRisk
}

func (o *ServerlessFunctionValidation) GetRisk() *ServerlessFunctionRiskLevel {
	if o == nil {
		return nil
	}
	return o.Risk
}

func (o *ServerlessFunctionValidation) GetSecretsRisk() *ServerlessSecretsRisk {
	if o == nil {
		return nil
	}
	return o.SecretsRisk
}

func (o *ServerlessFunctionValidation) GetVulnerability() *VulnerabilitySeverity {
	if o == nil {
		return nil
	}
	return o.Vulnerability
}
