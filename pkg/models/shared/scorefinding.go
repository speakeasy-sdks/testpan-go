// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

type ScoreFindingData struct {
}

type ScoreFinding struct {
	// Finding instance additional attributes
	AdditionalInfo []AdditionalInfo `json:"additional_info,omitempty"`
	// Raw data filled in only for unclassified findings, when allowed
	Data []ScoreFindingData `json:"data,omitempty"`
	// Finding description if finding has been classified, None otherwise
	Description *string `json:"description,omitempty"`
	// Finding mitigation if finding has been classified, None otherwise
	Mitigation *string `json:"mitigation,omitempty"`
	// Finding name
	Name string `json:"name"`
	// Number of findings of the same type
	Occurrences *int64 `json:"occurrences,omitempty"`
	// Identifier of the raw finding if available
	RawFindingID *string `json:"raw_finding_id,omitempty"`
	// Finding source or filled in with 'Undisclosed' if source cannot be revealed
	Source string `json:"source"`
	// Finding type identifier if finding has been classified, None otherwise
	TypeID *string `json:"type_id,omitempty"`
}

func (o *ScoreFinding) GetAdditionalInfo() []AdditionalInfo {
	if o == nil {
		return nil
	}
	return o.AdditionalInfo
}

func (o *ScoreFinding) GetData() []ScoreFindingData {
	if o == nil {
		return nil
	}
	return o.Data
}

func (o *ScoreFinding) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *ScoreFinding) GetMitigation() *string {
	if o == nil {
		return nil
	}
	return o.Mitigation
}

func (o *ScoreFinding) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *ScoreFinding) GetOccurrences() *int64 {
	if o == nil {
		return nil
	}
	return o.Occurrences
}

func (o *ScoreFinding) GetRawFindingID() *string {
	if o == nil {
		return nil
	}
	return o.RawFindingID
}

func (o *ScoreFinding) GetSource() string {
	if o == nil {
		return ""
	}
	return o.Source
}

func (o *ScoreFinding) GetTypeID() *string {
	if o == nil {
		return nil
	}
	return o.TypeID
}
