// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"github.com/speakeasy-sdks/testpan-go/pkg/utils"
)

type SplunkEventsForwardingDetailsInput struct {
	EventsForwardingDetailsType EventsForwardingDetailsTypeEnum `json:"eventsForwardingDetailsType"`
	EventsToForward             []EventsToForward               `json:"eventsToForward"`
	IsCloud                     *bool                           `default:"false" json:"isCloud"`
	Name                        string                          `json:"name"`
	Port                        *int64                          `json:"port,omitempty"`
	SourceName                  *string                         `default:"Secure Application management" json:"sourceName"`
	Token                       string                          `json:"token"`
	URL                         *string                         `json:"url,omitempty"`
}

func (s SplunkEventsForwardingDetailsInput) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SplunkEventsForwardingDetailsInput) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *SplunkEventsForwardingDetailsInput) GetEventsForwardingDetailsType() EventsForwardingDetailsTypeEnum {
	if o == nil {
		return EventsForwardingDetailsTypeEnum("")
	}
	return o.EventsForwardingDetailsType
}

func (o *SplunkEventsForwardingDetailsInput) GetEventsToForward() []EventsToForward {
	if o == nil {
		return []EventsToForward{}
	}
	return o.EventsToForward
}

func (o *SplunkEventsForwardingDetailsInput) GetIsCloud() *bool {
	if o == nil {
		return nil
	}
	return o.IsCloud
}

func (o *SplunkEventsForwardingDetailsInput) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *SplunkEventsForwardingDetailsInput) GetPort() *int64 {
	if o == nil {
		return nil
	}
	return o.Port
}

func (o *SplunkEventsForwardingDetailsInput) GetSourceName() *string {
	if o == nil {
		return nil
	}
	return o.SourceName
}

func (o *SplunkEventsForwardingDetailsInput) GetToken() string {
	if o == nil {
		return ""
	}
	return o.Token
}

func (o *SplunkEventsForwardingDetailsInput) GetURL() *string {
	if o == nil {
		return nil
	}
	return o.URL
}
