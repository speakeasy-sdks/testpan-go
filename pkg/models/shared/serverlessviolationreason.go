// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ServerlessViolationReason string

const (
	ServerlessViolationReasonRisk               ServerlessViolationReason = "RISK"
	ServerlessViolationReasonVulnerability      ServerlessViolationReason = "VULNERABILITY"
	ServerlessViolationReasonSecrets            ServerlessViolationReason = "SECRETS"
	ServerlessViolationReasonFunctionPermission ServerlessViolationReason = "FUNCTION_PERMISSION"
	ServerlessViolationReasonDataAccess         ServerlessViolationReason = "DATA_ACCESS"
	ServerlessViolationReasonPubliclyAccessible ServerlessViolationReason = "PUBLICLY_ACCESSIBLE"
	ServerlessViolationReasonUnusedFunction     ServerlessViolationReason = "UNUSED_FUNCTION"
	ServerlessViolationReasonUnidentified       ServerlessViolationReason = "UNIDENTIFIED"
)

func (e ServerlessViolationReason) ToPointer() *ServerlessViolationReason {
	return &e
}

func (e *ServerlessViolationReason) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "RISK":
		fallthrough
	case "VULNERABILITY":
		fallthrough
	case "SECRETS":
		fallthrough
	case "FUNCTION_PERMISSION":
		fallthrough
	case "DATA_ACCESS":
		fallthrough
	case "PUBLICLY_ACCESSIBLE":
		fallthrough
	case "UNUSED_FUNCTION":
		fallthrough
	case "UNIDENTIFIED":
		*e = ServerlessViolationReason(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ServerlessViolationReason: %v", v)
	}
}
