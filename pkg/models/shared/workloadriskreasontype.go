// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type WorkloadRiskReasonType string

const (
	WorkloadRiskReasonTypeK8SDashboard             WorkloadRiskReasonType = "K8S_DASHBOARD"
	WorkloadRiskReasonTypeVulnerability            WorkloadRiskReasonType = "VULNERABILITY"
	WorkloadRiskReasonTypeRiskyRole                WorkloadRiskReasonType = "RISKY_ROLE"
	WorkloadRiskReasonTypePrivileged               WorkloadRiskReasonType = "PRIVILEGED"
	WorkloadRiskReasonTypeRunAsRoot                WorkloadRiskReasonType = "RUN_AS_ROOT"
	WorkloadRiskReasonTypeAllowedHostPath          WorkloadRiskReasonType = "ALLOWED_HOST_PATH"
	WorkloadRiskReasonTypeAllowedRiskyCapabilities WorkloadRiskReasonType = "ALLOWED_RISKY_CAPABILITIES"
	WorkloadRiskReasonTypePublicFacing             WorkloadRiskReasonType = "PUBLIC_FACING"
	WorkloadRiskReasonTypeUnidentified             WorkloadRiskReasonType = "UNIDENTIFIED"
	WorkloadRiskReasonTypeRunningSSHServer         WorkloadRiskReasonType = "RUNNING_SSH_SERVER"
	WorkloadRiskReasonTypeHostNetwork              WorkloadRiskReasonType = "HOST_NETWORK"
	WorkloadRiskReasonTypeHostPid                  WorkloadRiskReasonType = "HOST_PID"
	WorkloadRiskReasonTypeHostIpc                  WorkloadRiskReasonType = "HOST_IPC"
	WorkloadRiskReasonTypeAllowPrivilegeEscalation WorkloadRiskReasonType = "ALLOW_PRIVILEGE_ESCALATION"
	WorkloadRiskReasonTypeTemplateDiff             WorkloadRiskReasonType = "TEMPLATE_DIFF"
	WorkloadRiskReasonTypeDockerfileScan           WorkloadRiskReasonType = "DOCKERFILE_SCAN"
	WorkloadRiskReasonTypeAPI                      WorkloadRiskReasonType = "API"
)

func (e WorkloadRiskReasonType) ToPointer() *WorkloadRiskReasonType {
	return &e
}

func (e *WorkloadRiskReasonType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "K8S_DASHBOARD":
		fallthrough
	case "VULNERABILITY":
		fallthrough
	case "RISKY_ROLE":
		fallthrough
	case "PRIVILEGED":
		fallthrough
	case "RUN_AS_ROOT":
		fallthrough
	case "ALLOWED_HOST_PATH":
		fallthrough
	case "ALLOWED_RISKY_CAPABILITIES":
		fallthrough
	case "PUBLIC_FACING":
		fallthrough
	case "UNIDENTIFIED":
		fallthrough
	case "RUNNING_SSH_SERVER":
		fallthrough
	case "HOST_NETWORK":
		fallthrough
	case "HOST_PID":
		fallthrough
	case "HOST_IPC":
		fallthrough
	case "ALLOW_PRIVILEGE_ESCALATION":
		fallthrough
	case "TEMPLATE_DIFF":
		fallthrough
	case "DOCKERFILE_SCAN":
		fallthrough
	case "API":
		*e = WorkloadRiskReasonType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for WorkloadRiskReasonType: %v", v)
	}
}
