// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/speakeasy-sdks/testpan-go/pkg/models/shared"
	"github.com/speakeasy-sdks/testpan-go/pkg/utils"
	"net/http"
)

// GetImagesQueryParamSortDir - sorting direction
type GetImagesQueryParamSortDir string

const (
	GetImagesQueryParamSortDirAsc  GetImagesQueryParamSortDir = "ASC"
	GetImagesQueryParamSortDirDesc GetImagesQueryParamSortDir = "DESC"
)

func (e GetImagesQueryParamSortDir) ToPointer() *GetImagesQueryParamSortDir {
	return &e
}

func (e *GetImagesQueryParamSortDir) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ASC":
		fallthrough
	case "DESC":
		*e = GetImagesQueryParamSortDir(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetImagesQueryParamSortDir: %v", v)
	}
}

// GetImagesQueryParamSortKey - image sort key. enum description in image sort key definition
type GetImagesQueryParamSortKey string

const (
	GetImagesQueryParamSortKeyImageName GetImagesQueryParamSortKey = "IMAGE_NAME"
	GetImagesQueryParamSortKeyTime      GetImagesQueryParamSortKey = "TIME"
	GetImagesQueryParamSortKeyRisk      GetImagesQueryParamSortKey = "RISK"
)

func (e GetImagesQueryParamSortKey) ToPointer() *GetImagesQueryParamSortKey {
	return &e
}

func (e *GetImagesQueryParamSortKey) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "IMAGE_NAME":
		fallthrough
	case "TIME":
		fallthrough
	case "RISK":
		*e = GetImagesQueryParamSortKey(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetImagesQueryParamSortKey: %v", v)
	}
}

type GetImagesRequest struct {
	// Filter images by HASH
	ImageHash []string `queryParam:"style=form,explode=false,name=IMAGE_HASH"`
	// Filter images by name
	ImageName []string `queryParam:"style=form,explode=false,name=IMAGE_NAME"`
	// Filter images by tags
	ImageTag []string `queryParam:"style=form,explode=false,name=IMAGE_TAG"`
	// When true, the API will return an xlsx file, and pagination will be ignored
	DownloadAsXlsx *bool `queryParam:"style=form,explode=true,name=downloadAsXlsx"`
	// The number of entries to return (pagination)
	MaxResults *float64 `default:"100" queryParam:"style=form,explode=true,name=maxResults"`
	// Return entries from this offset (pagination)
	Offset *float64 `default:"0" queryParam:"style=form,explode=true,name=offset"`
	// sorting direction
	SortDir *GetImagesQueryParamSortDir `default:"DESC" queryParam:"style=form,explode=true,name=sortDir"`
	// image sort key. enum description in image sort key definition
	SortKey GetImagesQueryParamSortKey `default:"RISK" queryParam:"style=form,explode=true,name=sortKey"`
	// Filter images by vulnerability name
	VulnerabilityName *string `queryParam:"style=form,explode=true,name=vulnerabilityName"`
}

func (g GetImagesRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetImagesRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *GetImagesRequest) GetImageHash() []string {
	if o == nil {
		return nil
	}
	return o.ImageHash
}

func (o *GetImagesRequest) GetImageName() []string {
	if o == nil {
		return nil
	}
	return o.ImageName
}

func (o *GetImagesRequest) GetImageTag() []string {
	if o == nil {
		return nil
	}
	return o.ImageTag
}

func (o *GetImagesRequest) GetDownloadAsXlsx() *bool {
	if o == nil {
		return nil
	}
	return o.DownloadAsXlsx
}

func (o *GetImagesRequest) GetMaxResults() *float64 {
	if o == nil {
		return nil
	}
	return o.MaxResults
}

func (o *GetImagesRequest) GetOffset() *float64 {
	if o == nil {
		return nil
	}
	return o.Offset
}

func (o *GetImagesRequest) GetSortDir() *GetImagesQueryParamSortDir {
	if o == nil {
		return nil
	}
	return o.SortDir
}

func (o *GetImagesRequest) GetSortKey() GetImagesQueryParamSortKey {
	if o == nil {
		return GetImagesQueryParamSortKey("")
	}
	return o.SortKey
}

func (o *GetImagesRequest) GetVulnerabilityName() *string {
	if o == nil {
		return nil
	}
	return o.VulnerabilityName
}

type GetImagesResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// OK
	Classes []shared.ImageDefGet
}

func (o *GetImagesResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetImagesResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetImagesResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *GetImagesResponse) GetClasses() []shared.ImageDefGet {
	if o == nil {
		return nil
	}
	return o.Classes
}
