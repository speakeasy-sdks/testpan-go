// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"github.com/speakeasy-sdks/testpan-go/pkg/utils"
	"time"
)

type ServerlessZip struct {
	ID           *string `json:"id,omitempty"`
	IsIdentified *bool   `json:"isIdentified,omitempty"`
	// zip name that was given by the user to the cli
	Name *string `json:"name,omitempty"`
	// the zip file's sha256 identifier
	Sha256      *string        `json:"sha256,omitempty"`
	SourceType  *ZipSourceType `json:"sourceType,omitempty"`
	TimeUpdated *time.Time     `json:"timeUpdated,omitempty"`
	// Vulnerabilities summary by severity
	VulnerabilitiesSummary *VulnerabilitiesSummary `json:"vulnerabilitiesSummary,omitempty"`
}

func (s ServerlessZip) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *ServerlessZip) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ServerlessZip) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *ServerlessZip) GetIsIdentified() *bool {
	if o == nil {
		return nil
	}
	return o.IsIdentified
}

func (o *ServerlessZip) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *ServerlessZip) GetSha256() *string {
	if o == nil {
		return nil
	}
	return o.Sha256
}

func (o *ServerlessZip) GetSourceType() *ZipSourceType {
	if o == nil {
		return nil
	}
	return o.SourceType
}

func (o *ServerlessZip) GetTimeUpdated() *time.Time {
	if o == nil {
		return nil
	}
	return o.TimeUpdated
}

func (o *ServerlessZip) GetVulnerabilitiesSummary() *VulnerabilitiesSummary {
	if o == nil {
		return nil
	}
	return o.VulnerabilitiesSummary
}
