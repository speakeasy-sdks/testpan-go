// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type OpenAPISpecAvailabilityStatus string

const (
	OpenAPISpecAvailabilityStatusNotAvailable   OpenAPISpecAvailabilityStatus = "NOT_AVAILABLE"
	OpenAPISpecAvailabilityStatusAvailable      OpenAPISpecAvailabilityStatus = "AVAILABLE"
	OpenAPISpecAvailabilityStatusCollectingData OpenAPISpecAvailabilityStatus = "COLLECTING_DATA"
	OpenAPISpecAvailabilityStatusReviewRequired OpenAPISpecAvailabilityStatus = "REVIEW_REQUIRED"
	OpenAPISpecAvailabilityStatusApproving      OpenAPISpecAvailabilityStatus = "APPROVING"
	OpenAPISpecAvailabilityStatusAborting       OpenAPISpecAvailabilityStatus = "ABORTING"
	OpenAPISpecAvailabilityStatusError          OpenAPISpecAvailabilityStatus = "ERROR"
)

func (e OpenAPISpecAvailabilityStatus) ToPointer() *OpenAPISpecAvailabilityStatus {
	return &e
}

func (e *OpenAPISpecAvailabilityStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NOT_AVAILABLE":
		fallthrough
	case "AVAILABLE":
		fallthrough
	case "COLLECTING_DATA":
		fallthrough
	case "REVIEW_REQUIRED":
		fallthrough
	case "APPROVING":
		fallthrough
	case "ABORTING":
		fallthrough
	case "ERROR":
		*e = OpenAPISpecAvailabilityStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for OpenAPISpecAvailabilityStatus: %v", v)
	}
}
