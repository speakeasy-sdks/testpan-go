// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

type AppEnvInfoEnvironment struct {
	Name *string `json:"name,omitempty"`
}

func (o *AppEnvInfoEnvironment) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

type AppEnvInfoInstance struct {
	AgentID        *string `json:"agentId,omitempty"`
	CloudAccountID *string `json:"cloudAccountId,omitempty"`
	ID             *string `json:"id,omitempty"`
	Name           *string `json:"name,omitempty"`
	Namespace      *string `json:"namespace,omitempty"`
	NamespaceID    *string `json:"namespaceId,omitempty"`
	Network        *string `json:"network,omitempty"`
	NetworkName    *string `json:"networkName,omitempty"`
	Region         *string `json:"region,omitempty"`
}

func (o *AppEnvInfoInstance) GetAgentID() *string {
	if o == nil {
		return nil
	}
	return o.AgentID
}

func (o *AppEnvInfoInstance) GetCloudAccountID() *string {
	if o == nil {
		return nil
	}
	return o.CloudAccountID
}

func (o *AppEnvInfoInstance) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *AppEnvInfoInstance) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *AppEnvInfoInstance) GetNamespace() *string {
	if o == nil {
		return nil
	}
	return o.Namespace
}

func (o *AppEnvInfoInstance) GetNamespaceID() *string {
	if o == nil {
		return nil
	}
	return o.NamespaceID
}

func (o *AppEnvInfoInstance) GetNetwork() *string {
	if o == nil {
		return nil
	}
	return o.Network
}

func (o *AppEnvInfoInstance) GetNetworkName() *string {
	if o == nil {
		return nil
	}
	return o.NetworkName
}

func (o *AppEnvInfoInstance) GetRegion() *string {
	if o == nil {
		return nil
	}
	return o.Region
}

type AppEnvInfo struct {
	// app info and process info for connection and App telemetries
	App *AppProcessInfo `json:"app,omitempty"`
	// runtime info of the App (if it is an App)
	AppRuntimeInfo *AppRuntimeInfo         `json:"appRuntimeInfo,omitempty"`
	Environment    *AppEnvInfoEnvironment  `json:"environment,omitempty"`
	Expansion      *ExpansionTelemetryInfo `json:"expansion,omitempty"`
	Fqdn           *string                 `json:"fqdn,omitempty"`
	Instance       *AppEnvInfoInstance     `json:"instance,omitempty"`
	IP             *string                 `json:"ip,omitempty"`
	Pod            *PodTelemetryInfo       `json:"pod,omitempty"`
	// runtime info of the pod (if is a pod)
	PodRuntimeInfo *PodRuntimeInfo `json:"podRuntimeInfo,omitempty"`
	WorkloadType   *WorkloadType   `json:"workloadType,omitempty"`
}

func (o *AppEnvInfo) GetApp() *AppProcessInfo {
	if o == nil {
		return nil
	}
	return o.App
}

func (o *AppEnvInfo) GetAppRuntimeInfo() *AppRuntimeInfo {
	if o == nil {
		return nil
	}
	return o.AppRuntimeInfo
}

func (o *AppEnvInfo) GetEnvironment() *AppEnvInfoEnvironment {
	if o == nil {
		return nil
	}
	return o.Environment
}

func (o *AppEnvInfo) GetExpansion() *ExpansionTelemetryInfo {
	if o == nil {
		return nil
	}
	return o.Expansion
}

func (o *AppEnvInfo) GetFqdn() *string {
	if o == nil {
		return nil
	}
	return o.Fqdn
}

func (o *AppEnvInfo) GetInstance() *AppEnvInfoInstance {
	if o == nil {
		return nil
	}
	return o.Instance
}

func (o *AppEnvInfo) GetIP() *string {
	if o == nil {
		return nil
	}
	return o.IP
}

func (o *AppEnvInfo) GetPod() *PodTelemetryInfo {
	if o == nil {
		return nil
	}
	return o.Pod
}

func (o *AppEnvInfo) GetPodRuntimeInfo() *PodRuntimeInfo {
	if o == nil {
		return nil
	}
	return o.PodRuntimeInfo
}

func (o *AppEnvInfo) GetWorkloadType() *WorkloadType {
	if o == nil {
		return nil
	}
	return o.WorkloadType
}
