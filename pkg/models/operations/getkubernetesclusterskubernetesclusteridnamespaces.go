// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/speakeasy-sdks/testpan-go/pkg/models/sdkerrors"
	"github.com/speakeasy-sdks/testpan-go/pkg/models/shared"
	"github.com/speakeasy-sdks/testpan-go/pkg/utils"
	"net/http"
)

// GetKubernetesClustersKubernetesClusterIDNamespacesQueryParamSortDir - sorting direction
type GetKubernetesClustersKubernetesClusterIDNamespacesQueryParamSortDir string

const (
	GetKubernetesClustersKubernetesClusterIDNamespacesQueryParamSortDirAsc  GetKubernetesClustersKubernetesClusterIDNamespacesQueryParamSortDir = "ASC"
	GetKubernetesClustersKubernetesClusterIDNamespacesQueryParamSortDirDesc GetKubernetesClustersKubernetesClusterIDNamespacesQueryParamSortDir = "DESC"
)

func (e GetKubernetesClustersKubernetesClusterIDNamespacesQueryParamSortDir) ToPointer() *GetKubernetesClustersKubernetesClusterIDNamespacesQueryParamSortDir {
	return &e
}

func (e *GetKubernetesClustersKubernetesClusterIDNamespacesQueryParamSortDir) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ASC":
		fallthrough
	case "DESC":
		*e = GetKubernetesClustersKubernetesClusterIDNamespacesQueryParamSortDir(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetKubernetesClustersKubernetesClusterIDNamespacesQueryParamSortDir: %v", v)
	}
}

// GetKubernetesClustersKubernetesClusterIDNamespacesQueryParamSortKey - sort key
type GetKubernetesClustersKubernetesClusterIDNamespacesQueryParamSortKey string

const (
	GetKubernetesClustersKubernetesClusterIDNamespacesQueryParamSortKeyName   GetKubernetesClustersKubernetesClusterIDNamespacesQueryParamSortKey = "name"
	GetKubernetesClustersKubernetesClusterIDNamespacesQueryParamSortKeyStatus GetKubernetesClustersKubernetesClusterIDNamespacesQueryParamSortKey = "status"
)

func (e GetKubernetesClustersKubernetesClusterIDNamespacesQueryParamSortKey) ToPointer() *GetKubernetesClustersKubernetesClusterIDNamespacesQueryParamSortKey {
	return &e
}

func (e *GetKubernetesClustersKubernetesClusterIDNamespacesQueryParamSortKey) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "name":
		fallthrough
	case "status":
		*e = GetKubernetesClustersKubernetesClusterIDNamespacesQueryParamSortKey(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetKubernetesClustersKubernetesClusterIDNamespacesQueryParamSortKey: %v", v)
	}
}

type GetKubernetesClustersKubernetesClusterIDNamespacesRequest struct {
	// If true - return all scannable namespaces
	IncludeScannable *bool `default:"false" queryParam:"style=form,explode=true,name=includeScannable"`
	// Secure Application Kubernetes cluster ID
	KubernetesClusterID string `pathParam:"style=simple,explode=false,name=kubernetesClusterId"`
	// sorting direction
	SortDir *GetKubernetesClustersKubernetesClusterIDNamespacesQueryParamSortDir `default:"ASC" queryParam:"style=form,explode=true,name=sortDir"`
	// sort key
	SortKey *GetKubernetesClustersKubernetesClusterIDNamespacesQueryParamSortKey `default:"name" queryParam:"style=form,explode=true,name=sortKey"`
}

func (g GetKubernetesClustersKubernetesClusterIDNamespacesRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetKubernetesClustersKubernetesClusterIDNamespacesRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *GetKubernetesClustersKubernetesClusterIDNamespacesRequest) GetIncludeScannable() *bool {
	if o == nil {
		return nil
	}
	return o.IncludeScannable
}

func (o *GetKubernetesClustersKubernetesClusterIDNamespacesRequest) GetKubernetesClusterID() string {
	if o == nil {
		return ""
	}
	return o.KubernetesClusterID
}

func (o *GetKubernetesClustersKubernetesClusterIDNamespacesRequest) GetSortDir() *GetKubernetesClustersKubernetesClusterIDNamespacesQueryParamSortDir {
	if o == nil {
		return nil
	}
	return o.SortDir
}

func (o *GetKubernetesClustersKubernetesClusterIDNamespacesRequest) GetSortKey() *GetKubernetesClustersKubernetesClusterIDNamespacesQueryParamSortKey {
	if o == nil {
		return nil
	}
	return o.SortKey
}

type GetKubernetesClustersKubernetesClusterIDNamespacesResponse struct {
	// unknown error
	APIResponse *sdkerrors.APIResponse
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// success
	Classes []shared.KubernetesNamespace
}

func (o *GetKubernetesClustersKubernetesClusterIDNamespacesResponse) GetAPIResponse() *sdkerrors.APIResponse {
	if o == nil {
		return nil
	}
	return o.APIResponse
}

func (o *GetKubernetesClustersKubernetesClusterIDNamespacesResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetKubernetesClustersKubernetesClusterIDNamespacesResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetKubernetesClustersKubernetesClusterIDNamespacesResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *GetKubernetesClustersKubernetesClusterIDNamespacesResponse) GetClasses() []shared.KubernetesNamespace {
	if o == nil {
		return nil
	}
	return o.Classes
}
