// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type RegistryType string

const (
	RegistryTypeAws   RegistryType = "AWS"
	RegistryTypeGcp   RegistryType = "GCP"
	RegistryTypeAzure RegistryType = "AZURE"
	RegistryTypeJfrog RegistryType = "JFROG"
	RegistryTypeOther RegistryType = "OTHER"
)

func (e RegistryType) ToPointer() *RegistryType {
	return &e
}

func (e *RegistryType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWS":
		fallthrough
	case "GCP":
		fallthrough
	case "AZURE":
		fallthrough
	case "JFROG":
		fallthrough
	case "OTHER":
		*e = RegistryType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RegistryType: %v", v)
	}
}

// RegistryInput - image registry
type RegistryInput struct {
	ClusterIds  []string             `json:"clusterIds,omitempty"`
	Credentials *RegistryCredentials `json:"credentials,omitempty"`
	Type        RegistryType         `json:"type"`
	URL         string               `json:"url"`
}

func (o *RegistryInput) GetClusterIds() []string {
	if o == nil {
		return nil
	}
	return o.ClusterIds
}

func (o *RegistryInput) GetCredentials() *RegistryCredentials {
	if o == nil {
		return nil
	}
	return o.Credentials
}

func (o *RegistryInput) GetType() RegistryType {
	if o == nil {
		return RegistryType("")
	}
	return o.Type
}

func (o *RegistryInput) GetURL() string {
	if o == nil {
		return ""
	}
	return o.URL
}

// Registry - image registry
type Registry struct {
	ClusterIds  []string             `json:"clusterIds,omitempty"`
	Credentials *RegistryCredentials `json:"credentials,omitempty"`
	ID          *string              `json:"id,omitempty"`
	Type        RegistryType         `json:"type"`
	URL         string               `json:"url"`
}

func (o *Registry) GetClusterIds() []string {
	if o == nil {
		return nil
	}
	return o.ClusterIds
}

func (o *Registry) GetCredentials() *RegistryCredentials {
	if o == nil {
		return nil
	}
	return o.Credentials
}

func (o *Registry) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *Registry) GetType() RegistryType {
	if o == nil {
		return RegistryType("")
	}
	return o.Type
}

func (o *Registry) GetURL() string {
	if o == nil {
		return ""
	}
	return o.URL
}
