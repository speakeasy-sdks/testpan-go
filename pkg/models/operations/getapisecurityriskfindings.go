// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/speakeasy-sdks/testpan-go/pkg/models/shared"
	"github.com/speakeasy-sdks/testpan-go/pkg/utils"
	"net/http"
)

// GetAPISecurityRiskFindingsAPISecSource - source filter. an enum representing the source of the APIs service in scope
type GetAPISecurityRiskFindingsAPISecSource string

const (
	GetAPISecurityRiskFindingsAPISecSourceInternal GetAPISecurityRiskFindingsAPISecSource = "INTERNAL"
	GetAPISecurityRiskFindingsAPISecSourceExternal GetAPISecurityRiskFindingsAPISecSource = "EXTERNAL"
)

func (e GetAPISecurityRiskFindingsAPISecSource) ToPointer() *GetAPISecurityRiskFindingsAPISecSource {
	return &e
}

func (e *GetAPISecurityRiskFindingsAPISecSource) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "INTERNAL":
		fallthrough
	case "EXTERNAL":
		*e = GetAPISecurityRiskFindingsAPISecSource(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetAPISecurityRiskFindingsAPISecSource: %v", v)
	}
}

type GetAPISecurityRiskFindingsRisks string

const (
	GetAPISecurityRiskFindingsRisksLow      GetAPISecurityRiskFindingsRisks = "LOW"
	GetAPISecurityRiskFindingsRisksMedium   GetAPISecurityRiskFindingsRisks = "MEDIUM"
	GetAPISecurityRiskFindingsRisksHigh     GetAPISecurityRiskFindingsRisks = "HIGH"
	GetAPISecurityRiskFindingsRisksCritical GetAPISecurityRiskFindingsRisks = "CRITICAL"
	GetAPISecurityRiskFindingsRisksAll      GetAPISecurityRiskFindingsRisks = "ALL"
)

func (e GetAPISecurityRiskFindingsRisks) ToPointer() *GetAPISecurityRiskFindingsRisks {
	return &e
}

func (e *GetAPISecurityRiskFindingsRisks) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "LOW":
		fallthrough
	case "MEDIUM":
		fallthrough
	case "HIGH":
		fallthrough
	case "CRITICAL":
		fallthrough
	case "ALL":
		*e = GetAPISecurityRiskFindingsRisks(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetAPISecurityRiskFindingsRisks: %v", v)
	}
}

// GetAPISecurityRiskFindingsSortDir - sorting direction
type GetAPISecurityRiskFindingsSortDir string

const (
	GetAPISecurityRiskFindingsSortDirAsc  GetAPISecurityRiskFindingsSortDir = "ASC"
	GetAPISecurityRiskFindingsSortDirDesc GetAPISecurityRiskFindingsSortDir = "DESC"
)

func (e GetAPISecurityRiskFindingsSortDir) ToPointer() *GetAPISecurityRiskFindingsSortDir {
	return &e
}

func (e *GetAPISecurityRiskFindingsSortDir) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ASC":
		fallthrough
	case "DESC":
		*e = GetAPISecurityRiskFindingsSortDir(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetAPISecurityRiskFindingsSortDir: %v", v)
	}
}

// GetAPISecurityRiskFindingsSortKey - Risk finding sort key.
type GetAPISecurityRiskFindingsSortKey string

const (
	GetAPISecurityRiskFindingsSortKeyName GetAPISecurityRiskFindingsSortKey = "NAME"
	GetAPISecurityRiskFindingsSortKeyRisk GetAPISecurityRiskFindingsSortKey = "RISK"
)

func (e GetAPISecurityRiskFindingsSortKey) ToPointer() *GetAPISecurityRiskFindingsSortKey {
	return &e
}

func (e *GetAPISecurityRiskFindingsSortKey) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NAME":
		fallthrough
	case "RISK":
		*e = GetAPISecurityRiskFindingsSortKey(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetAPISecurityRiskFindingsSortKey: %v", v)
	}
}

type GetAPISecurityRiskFindingsRequest struct {
	// source filter. an enum representing the source of the APIs service in scope
	APISecSource GetAPISecurityRiskFindingsAPISecSource `default:"INTERNAL" queryParam:"style=form,explode=true,name=apiSecSource"`
	// Category of the risk finding
	Category *string `queryParam:"style=form,explode=true,name=category"`
	// Show finding with detect elements only
	Detected *bool `queryParam:"style=form,explode=true,name=detected"`
	// Affected element of the risk finding
	Element *string `queryParam:"style=form,explode=true,name=element"`
	// The number of entries to return (pagination)
	MaxResults *float64 `default:"100" queryParam:"style=form,explode=true,name=maxResults"`
	// Name of the risk finding name
	Name *string `queryParam:"style=form,explode=true,name=name"`
	// Return entries from this offset (pagination)
	Offset *float64 `default:"0" queryParam:"style=form,explode=true,name=offset"`
	// The API risk filter
	Risks []GetAPISecurityRiskFindingsRisks `queryParam:"style=form,explode=false,name=risks"`
	// sorting direction
	SortDir *GetAPISecurityRiskFindingsSortDir `default:"DESC" queryParam:"style=form,explode=true,name=sortDir"`
	// Risk finding sort key.
	SortKey GetAPISecurityRiskFindingsSortKey `default:"RISK" queryParam:"style=form,explode=true,name=sortKey"`
	// Source of the risk finding
	Source *string `queryParam:"style=form,explode=true,name=source"`
}

func (g GetAPISecurityRiskFindingsRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetAPISecurityRiskFindingsRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *GetAPISecurityRiskFindingsRequest) GetAPISecSource() GetAPISecurityRiskFindingsAPISecSource {
	if o == nil {
		return GetAPISecurityRiskFindingsAPISecSource("")
	}
	return o.APISecSource
}

func (o *GetAPISecurityRiskFindingsRequest) GetCategory() *string {
	if o == nil {
		return nil
	}
	return o.Category
}

func (o *GetAPISecurityRiskFindingsRequest) GetDetected() *bool {
	if o == nil {
		return nil
	}
	return o.Detected
}

func (o *GetAPISecurityRiskFindingsRequest) GetElement() *string {
	if o == nil {
		return nil
	}
	return o.Element
}

func (o *GetAPISecurityRiskFindingsRequest) GetMaxResults() *float64 {
	if o == nil {
		return nil
	}
	return o.MaxResults
}

func (o *GetAPISecurityRiskFindingsRequest) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *GetAPISecurityRiskFindingsRequest) GetOffset() *float64 {
	if o == nil {
		return nil
	}
	return o.Offset
}

func (o *GetAPISecurityRiskFindingsRequest) GetRisks() []GetAPISecurityRiskFindingsRisks {
	if o == nil {
		return nil
	}
	return o.Risks
}

func (o *GetAPISecurityRiskFindingsRequest) GetSortDir() *GetAPISecurityRiskFindingsSortDir {
	if o == nil {
		return nil
	}
	return o.SortDir
}

func (o *GetAPISecurityRiskFindingsRequest) GetSortKey() GetAPISecurityRiskFindingsSortKey {
	if o == nil {
		return GetAPISecurityRiskFindingsSortKey("")
	}
	return o.SortKey
}

func (o *GetAPISecurityRiskFindingsRequest) GetSource() *string {
	if o == nil {
		return nil
	}
	return o.Source
}

type GetAPISecurityRiskFindingsResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// Success
	RiskFindings *shared.RiskFindings
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *GetAPISecurityRiskFindingsResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetAPISecurityRiskFindingsResponse) GetRiskFindings() *shared.RiskFindings {
	if o == nil {
		return nil
	}
	return o.RiskFindings
}

func (o *GetAPISecurityRiskFindingsResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetAPISecurityRiskFindingsResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
