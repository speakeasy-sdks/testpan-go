// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/speakeasy-sdks/testpan-go/pkg/models/shared"
	"github.com/speakeasy-sdks/testpan-go/pkg/utils"
	"net/http"
)

// SpecPathMethod - spec path method
type SpecPathMethod string

const (
	SpecPathMethodGet     SpecPathMethod = "GET"
	SpecPathMethodPost    SpecPathMethod = "POST"
	SpecPathMethodPut     SpecPathMethod = "PUT"
	SpecPathMethodDelete  SpecPathMethod = "DELETE"
	SpecPathMethodHead    SpecPathMethod = "HEAD"
	SpecPathMethodConnect SpecPathMethod = "CONNECT"
	SpecPathMethodOptions SpecPathMethod = "OPTIONS"
	SpecPathMethodTrace   SpecPathMethod = "TRACE"
	SpecPathMethodPatch   SpecPathMethod = "PATCH"
)

func (e SpecPathMethod) ToPointer() *SpecPathMethod {
	return &e
}

func (e *SpecPathMethod) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "GET":
		fallthrough
	case "POST":
		fallthrough
	case "PUT":
		fallthrough
	case "DELETE":
		fallthrough
	case "HEAD":
		fallthrough
	case "CONNECT":
		fallthrough
	case "OPTIONS":
		fallthrough
	case "TRACE":
		fallthrough
	case "PATCH":
		*e = SpecPathMethod(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SpecPathMethod: %v", v)
	}
}

type GetAPISecurityAPICatalogIDHitCountGraphRequest struct {
	CatalogID string `pathParam:"style=simple,explode=false,name=catalogId"`
	// hours interval
	HoursInterval *int64 `default:"24" queryParam:"style=form,explode=true,name=hoursInterval"`
	// spec path
	SpecPath string `queryParam:"style=form,explode=true,name=specPath"`
	// spec path method
	SpecPathMethod SpecPathMethod `queryParam:"style=form,explode=true,name=specPathMethod"`
}

func (g GetAPISecurityAPICatalogIDHitCountGraphRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetAPISecurityAPICatalogIDHitCountGraphRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *GetAPISecurityAPICatalogIDHitCountGraphRequest) GetCatalogID() string {
	if o == nil {
		return ""
	}
	return o.CatalogID
}

func (o *GetAPISecurityAPICatalogIDHitCountGraphRequest) GetHoursInterval() *int64 {
	if o == nil {
		return nil
	}
	return o.HoursInterval
}

func (o *GetAPISecurityAPICatalogIDHitCountGraphRequest) GetSpecPath() string {
	if o == nil {
		return ""
	}
	return o.SpecPath
}

func (o *GetAPISecurityAPICatalogIDHitCountGraphRequest) GetSpecPathMethod() SpecPathMethod {
	if o == nil {
		return SpecPathMethod("")
	}
	return o.SpecPathMethod
}

type GetAPISecurityAPICatalogIDHitCountGraphResponse struct {
	// Success
	APIServiceSpecPathHitCountGraph []shared.APIServiceSpecPathHitCountGraphPoint
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *GetAPISecurityAPICatalogIDHitCountGraphResponse) GetAPIServiceSpecPathHitCountGraph() []shared.APIServiceSpecPathHitCountGraphPoint {
	if o == nil {
		return nil
	}
	return o.APIServiceSpecPathHitCountGraph
}

func (o *GetAPISecurityAPICatalogIDHitCountGraphResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetAPISecurityAPICatalogIDHitCountGraphResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetAPISecurityAPICatalogIDHitCountGraphResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
