// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/speakeasy-sdks/testpan-go/pkg/models/shared"
	"github.com/speakeasy-sdks/testpan-go/pkg/utils"
	"net/http"
)

// QueryParamAPISecSource - source filter. an enum representing the source of the APIs service in scope
type QueryParamAPISecSource string

const (
	QueryParamAPISecSourceInternal QueryParamAPISecSource = "INTERNAL"
	QueryParamAPISecSourceExternal QueryParamAPISecSource = "EXTERNAL"
)

func (e QueryParamAPISecSource) ToPointer() *QueryParamAPISecSource {
	return &e
}

func (e *QueryParamAPISecSource) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "INTERNAL":
		fallthrough
	case "EXTERNAL":
		*e = QueryParamAPISecSource(v)
		return nil
	default:
		return fmt.Errorf("invalid value for QueryParamAPISecSource: %v", v)
	}
}

type GetDashboardApisecRiskFindingsRequest struct {
	// source filter. an enum representing the source of the APIs service in scope
	APISecSource QueryParamAPISecSource `default:"INTERNAL" queryParam:"style=form,explode=true,name=apiSecSource"`
}

func (g GetDashboardApisecRiskFindingsRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetDashboardApisecRiskFindingsRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *GetDashboardApisecRiskFindingsRequest) GetAPISecSource() QueryParamAPISecSource {
	if o == nil {
		return QueryParamAPISecSource("")
	}
	return o.APISecSource
}

type GetDashboardApisecRiskFindingsResponse struct {
	// OK
	APISecRiskFindingsWidget *shared.APISecRiskFindingsWidget
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *GetDashboardApisecRiskFindingsResponse) GetAPISecRiskFindingsWidget() *shared.APISecRiskFindingsWidget {
	if o == nil {
		return nil
	}
	return o.APISecRiskFindingsWidget
}

func (o *GetDashboardApisecRiskFindingsResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetDashboardApisecRiskFindingsResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetDashboardApisecRiskFindingsResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
