// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ConnectionRuleAction - ENCRYPT is not allowed in default rule
type ConnectionRuleAction string

const (
	ConnectionRuleActionDetect        ConnectionRuleAction = "DETECT"
	ConnectionRuleActionBlock         ConnectionRuleAction = "BLOCK"
	ConnectionRuleActionAllow         ConnectionRuleAction = "ALLOW"
	ConnectionRuleActionEncrypt       ConnectionRuleAction = "ENCRYPT"
	ConnectionRuleActionEncryptDirect ConnectionRuleAction = "ENCRYPT_DIRECT"
)

func (e ConnectionRuleAction) ToPointer() *ConnectionRuleAction {
	return &e
}

func (e *ConnectionRuleAction) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DETECT":
		fallthrough
	case "BLOCK":
		fallthrough
	case "ALLOW":
		fallthrough
	case "ENCRYPT":
		fallthrough
	case "ENCRYPT_DIRECT":
		*e = ConnectionRuleAction(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ConnectionRuleAction: %v", v)
	}
}
