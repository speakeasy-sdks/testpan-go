// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

type TokenInjectionInfo struct {
	EnvVariable    *string `json:"envVariable,omitempty"`
	Error          *string `json:"error,omitempty"`
	IsRuleDeleted  *bool   `json:"isRuleDeleted,omitempty"`
	IsTokenDeleted *bool   `json:"isTokenDeleted,omitempty"`
	RuleID         *string `json:"ruleId,omitempty"`
	RuleName       *string `json:"ruleName,omitempty"`
	TokenID        *string `json:"tokenId,omitempty"`
	TokenName      *string `json:"tokenName,omitempty"`
}

func (o *TokenInjectionInfo) GetEnvVariable() *string {
	if o == nil {
		return nil
	}
	return o.EnvVariable
}

func (o *TokenInjectionInfo) GetError() *string {
	if o == nil {
		return nil
	}
	return o.Error
}

func (o *TokenInjectionInfo) GetIsRuleDeleted() *bool {
	if o == nil {
		return nil
	}
	return o.IsRuleDeleted
}

func (o *TokenInjectionInfo) GetIsTokenDeleted() *bool {
	if o == nil {
		return nil
	}
	return o.IsTokenDeleted
}

func (o *TokenInjectionInfo) GetRuleID() *string {
	if o == nil {
		return nil
	}
	return o.RuleID
}

func (o *TokenInjectionInfo) GetRuleName() *string {
	if o == nil {
		return nil
	}
	return o.RuleName
}

func (o *TokenInjectionInfo) GetTokenID() *string {
	if o == nil {
		return nil
	}
	return o.TokenID
}

func (o *TokenInjectionInfo) GetTokenName() *string {
	if o == nil {
		return nil
	}
	return o.TokenName
}
