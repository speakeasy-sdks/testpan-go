// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"github.com/speakeasy-sdks/testpan-go/pkg/utils"
	"time"
)

// TelemetryState - Status of a telemetry entry
type TelemetryState struct {
	LastSeen  *time.Time            `json:"lastSeen,omitempty"`
	StartTime *time.Time            `json:"startTime,omitempty"`
	Status    *TelemetryStateStatus `json:"status,omitempty"`
	// will be populate only when status is unhealthy
	StatusReason *string `json:"statusReason,omitempty"`
}

func (t TelemetryState) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TelemetryState) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TelemetryState) GetLastSeen() *time.Time {
	if o == nil {
		return nil
	}
	return o.LastSeen
}

func (o *TelemetryState) GetStartTime() *time.Time {
	if o == nil {
		return nil
	}
	return o.StartTime
}

func (o *TelemetryState) GetStatus() *TelemetryStateStatus {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *TelemetryState) GetStatusReason() *string {
	if o == nil {
		return nil
	}
	return o.StatusReason
}
