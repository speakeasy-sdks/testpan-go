// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type RiskAssessmentScanFailureSource string

const (
	RiskAssessmentScanFailureSourceJobTimeout          RiskAssessmentScanFailureSource = "JOB_TIMEOUT"
	RiskAssessmentScanFailureSourceJobCreation         RiskAssessmentScanFailureSource = "JOB_CREATION"
	RiskAssessmentScanFailureSourceUnauthorized        RiskAssessmentScanFailureSource = "UNAUTHORIZED"
	RiskAssessmentScanFailureSourceClairServerInternal RiskAssessmentScanFailureSource = "CLAIR_SERVER_INTERNAL"
	RiskAssessmentScanFailureSourceAnalyze             RiskAssessmentScanFailureSource = "ANALYZE"
)

func (e RiskAssessmentScanFailureSource) ToPointer() *RiskAssessmentScanFailureSource {
	return &e
}

func (e *RiskAssessmentScanFailureSource) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "JOB_TIMEOUT":
		fallthrough
	case "JOB_CREATION":
		fallthrough
	case "UNAUTHORIZED":
		fallthrough
	case "CLAIR_SERVER_INTERNAL":
		fallthrough
	case "ANALYZE":
		*e = RiskAssessmentScanFailureSource(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RiskAssessmentScanFailureSource: %v", v)
	}
}
