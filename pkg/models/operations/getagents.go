// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/speakeasy-sdks/testpan-go/pkg/models/shared"
	"github.com/speakeasy-sdks/testpan-go/pkg/utils"
	"net/http"
)

type GetAgentsRisk string

const (
	GetAgentsRiskHigh      GetAgentsRisk = "HIGH"
	GetAgentsRiskMedium    GetAgentsRisk = "MEDIUM"
	GetAgentsRiskLow       GetAgentsRisk = "LOW"
	GetAgentsRiskUndefined GetAgentsRisk = "UNDEFINED"
)

func (e GetAgentsRisk) ToPointer() *GetAgentsRisk {
	return &e
}

func (e *GetAgentsRisk) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "HIGH":
		fallthrough
	case "MEDIUM":
		fallthrough
	case "LOW":
		fallthrough
	case "UNDEFINED":
		*e = GetAgentsRisk(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetAgentsRisk: %v", v)
	}
}

// GetAgentsSortDir - sorting direction
type GetAgentsSortDir string

const (
	GetAgentsSortDirAsc  GetAgentsSortDir = "ASC"
	GetAgentsSortDirDesc GetAgentsSortDir = "DESC"
)

func (e GetAgentsSortDir) ToPointer() *GetAgentsSortDir {
	return &e
}

func (e *GetAgentsSortDir) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ASC":
		fallthrough
	case "DESC":
		*e = GetAgentsSortDir(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetAgentsSortDir: %v", v)
	}
}

// GetAgentsSortKey - sort key
type GetAgentsSortKey string

const (
	GetAgentsSortKeyHostName        GetAgentsSortKey = "hostName"
	GetAgentsSortKeyEnvironmentName GetAgentsSortKey = "environmentName"
	GetAgentsSortKeyRisk            GetAgentsSortKey = "risk"
	GetAgentsSortKeyStatus          GetAgentsSortKey = "status"
	GetAgentsSortKeyLastActive      GetAgentsSortKey = "lastActive"
)

func (e GetAgentsSortKey) ToPointer() *GetAgentsSortKey {
	return &e
}

func (e *GetAgentsSortKey) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "hostName":
		fallthrough
	case "environmentName":
		fallthrough
	case "risk":
		fallthrough
	case "status":
		fallthrough
	case "lastActive":
		*e = GetAgentsSortKey(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetAgentsSortKey: %v", v)
	}
}

type GetAgentsStatus string

const (
	GetAgentsStatusActive     GetAgentsStatus = "ACTIVE"
	GetAgentsStatusInactive   GetAgentsStatus = "INACTIVE"
	GetAgentsStatusStopped    GetAgentsStatus = "STOPPED"
	GetAgentsStatusTerminated GetAgentsStatus = "TERMINATED"
)

func (e GetAgentsStatus) ToPointer() *GetAgentsStatus {
	return &e
}

func (e *GetAgentsStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ACTIVE":
		fallthrough
	case "INACTIVE":
		fallthrough
	case "STOPPED":
		fallthrough
	case "TERMINATED":
		*e = GetAgentsStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetAgentsStatus: %v", v)
	}
}

type GetAgentsRequest struct {
	// When true, the API will return an xlsx file, and pagination will be ignored
	DownloadAsXlsx *bool `queryParam:"style=form,explode=true,name=downloadAsXlsx"`
	// Empty string means no filtering. "UNDEFINED" means telemetries with no App type
	EnvironmentName []string `queryParam:"style=form,explode=false,name=environmentName"`
	// The name of the host
	HostName []string `queryParam:"style=form,explode=false,name=hostName"`
	// The risk of the environment for attack
	Risk []GetAgentsRisk `queryParam:"style=form,explode=false,name=risk"`
	// sorting direction
	SortDir *GetAgentsSortDir `default:"ASC" queryParam:"style=form,explode=true,name=sortDir"`
	// sort key
	SortKey *GetAgentsSortKey `default:"hostName" queryParam:"style=form,explode=true,name=sortKey"`
	// Agent status
	Status []GetAgentsStatus `queryParam:"style=form,explode=false,name=status"`
}

func (g GetAgentsRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetAgentsRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *GetAgentsRequest) GetDownloadAsXlsx() *bool {
	if o == nil {
		return nil
	}
	return o.DownloadAsXlsx
}

func (o *GetAgentsRequest) GetEnvironmentName() []string {
	if o == nil {
		return nil
	}
	return o.EnvironmentName
}

func (o *GetAgentsRequest) GetHostName() []string {
	if o == nil {
		return nil
	}
	return o.HostName
}

func (o *GetAgentsRequest) GetRisk() []GetAgentsRisk {
	if o == nil {
		return nil
	}
	return o.Risk
}

func (o *GetAgentsRequest) GetSortDir() *GetAgentsSortDir {
	if o == nil {
		return nil
	}
	return o.SortDir
}

func (o *GetAgentsRequest) GetSortKey() *GetAgentsSortKey {
	if o == nil {
		return nil
	}
	return o.SortKey
}

func (o *GetAgentsRequest) GetStatus() []GetAgentsStatus {
	if o == nil {
		return nil
	}
	return o.Status
}

type GetAgentsResponse struct {
	// Success
	Agents *shared.Agents
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *GetAgentsResponse) GetAgents() *shared.Agents {
	if o == nil {
		return nil
	}
	return o.Agents
}

func (o *GetAgentsResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetAgentsResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetAgentsResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
