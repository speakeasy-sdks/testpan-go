// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/speakeasy-sdks/testpan-go/pkg/utils"
	"time"
)

type UserStatus string

const (
	UserStatusEnabled  UserStatus = "ENABLED"
	UserStatusDisabled UserStatus = "DISABLED"
)

func (e UserStatus) ToPointer() *UserStatus {
	return &e
}

func (e *UserStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ENABLED":
		fallthrough
	case "DISABLED":
		*e = UserStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UserStatus: %v", v)
	}
}

type User struct {
	// The Secure Application account ID to which the user belongs
	AccountID   *string `json:"accountId,omitempty"`
	Description *string `json:"description,omitempty"`
	// The email of the user.
	Email    *string `json:"email,omitempty"`
	FullName string  `json:"fullName"`
	// ID of the user as created by Secure Application management.
	ID        *string    `json:"id,omitempty"`
	LastLogin *time.Time `json:"lastLogin,omitempty"`
	// The role of the user
	Role                     *Role      `json:"role,omitempty"`
	ShouldDisplayEula        *bool      `json:"shouldDisplayEula,omitempty"`
	ShouldDisplayProductTour *bool      `json:"shouldDisplayProductTour,omitempty"`
	Status                   UserStatus `json:"status"`
}

func (u User) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(u, "", false)
}

func (u *User) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &u, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *User) GetAccountID() *string {
	if o == nil {
		return nil
	}
	return o.AccountID
}

func (o *User) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *User) GetEmail() *string {
	if o == nil {
		return nil
	}
	return o.Email
}

func (o *User) GetFullName() string {
	if o == nil {
		return ""
	}
	return o.FullName
}

func (o *User) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *User) GetLastLogin() *time.Time {
	if o == nil {
		return nil
	}
	return o.LastLogin
}

func (o *User) GetRole() *Role {
	if o == nil {
		return nil
	}
	return o.Role
}

func (o *User) GetShouldDisplayEula() *bool {
	if o == nil {
		return nil
	}
	return o.ShouldDisplayEula
}

func (o *User) GetShouldDisplayProductTour() *bool {
	if o == nil {
		return nil
	}
	return o.ShouldDisplayProductTour
}

func (o *User) GetStatus() UserStatus {
	if o == nil {
		return UserStatus("")
	}
	return o.Status
}

type UserInput struct {
	Description *string `json:"description,omitempty"`
	// The email of the user.
	Email    *string `json:"email,omitempty"`
	FullName string  `json:"fullName"`
	// ID of the user as created by Secure Application management.
	ID *string `json:"id,omitempty"`
	// The role of the user
	Role   *Role      `json:"role,omitempty"`
	Status UserStatus `json:"status"`
}

func (o *UserInput) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *UserInput) GetEmail() *string {
	if o == nil {
		return nil
	}
	return o.Email
}

func (o *UserInput) GetFullName() string {
	if o == nil {
		return ""
	}
	return o.FullName
}

func (o *UserInput) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *UserInput) GetRole() *Role {
	if o == nil {
		return nil
	}
	return o.Role
}

func (o *UserInput) GetStatus() UserStatus {
	if o == nil {
		return UserStatus("")
	}
	return o.Status
}
