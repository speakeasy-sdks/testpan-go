// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type RegistryCredentialsType string

const (
	RegistryCredentialsTypeAwsRegistryCredentials      RegistryCredentialsType = "AwsRegistryCredentials"
	RegistryCredentialsTypeStandardRegistryCredentials RegistryCredentialsType = "StandardRegistryCredentials"
	RegistryCredentialsTypeJfrogRegistryCredentials    RegistryCredentialsType = "JfrogRegistryCredentials"
)

func (e RegistryCredentialsType) ToPointer() *RegistryCredentialsType {
	return &e
}

func (e *RegistryCredentialsType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AwsRegistryCredentials":
		fallthrough
	case "StandardRegistryCredentials":
		fallthrough
	case "JfrogRegistryCredentials":
		*e = RegistryCredentialsType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RegistryCredentialsType: %v", v)
	}
}

type RegistryCredentials struct {
	RegistryCredentialsType RegistryCredentialsType `json:"registryCredentialsType"`
}

func (o *RegistryCredentials) GetRegistryCredentialsType() RegistryCredentialsType {
	if o == nil {
		return RegistryCredentialsType("")
	}
	return o.RegistryCredentialsType
}
