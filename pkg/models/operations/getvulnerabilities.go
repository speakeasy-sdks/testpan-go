// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy-sdks/testpan-go/pkg/utils"
	"net/http"
)

type GetVulnerabilitiesRequest struct {
	// The number of entries to return (pagination)
	MaxResults *float64 `default:"100" queryParam:"style=form,explode=true,name=maxResults"`
	// vulnerabilities to search for ( as prefix and suffix )
	VulName *string `queryParam:"style=form,explode=true,name=vulName"`
}

func (g GetVulnerabilitiesRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetVulnerabilitiesRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *GetVulnerabilitiesRequest) GetMaxResults() *float64 {
	if o == nil {
		return nil
	}
	return o.MaxResults
}

func (o *GetVulnerabilitiesRequest) GetVulName() *string {
	if o == nil {
		return nil
	}
	return o.VulName
}

type GetVulnerabilitiesResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Success
	GetVulnerabilities200ApplicationJSONStrings []string
}

func (o *GetVulnerabilitiesResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetVulnerabilitiesResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetVulnerabilitiesResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *GetVulnerabilitiesResponse) GetGetVulnerabilities200ApplicationJSONStrings() []string {
	if o == nil {
		return nil
	}
	return o.GetVulnerabilities200ApplicationJSONStrings
}
