// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"github.com/speakeasy-sdks/testpan-go/pkg/utils"
)

// ServerlessRule - A rule that states what serverless function are allowed and where.
type ServerlessRule struct {
	// serverless rule action
	Action    ServerlessRuleAction `json:"action"`
	GroupName *string              `json:"groupName,omitempty"`
	ID        *string              `json:"id,omitempty"`
	Name      string               `json:"name"`
	// identify the serverless functions matching type. Only one of the below should be not null, and  used.
	Rule       ServerlessRuleType    `json:"rule"`
	RuleOrigin *ServerlessRuleOrigin `default:"USER" json:"ruleOrigin"`
	Scope      []ServerlessRuleScope `json:"scope,omitempty"`
	Status     ServerlessRuleStatus  `json:"status"`
}

func (s ServerlessRule) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *ServerlessRule) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ServerlessRule) GetAction() ServerlessRuleAction {
	if o == nil {
		return ServerlessRuleAction("")
	}
	return o.Action
}

func (o *ServerlessRule) GetGroupName() *string {
	if o == nil {
		return nil
	}
	return o.GroupName
}

func (o *ServerlessRule) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *ServerlessRule) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *ServerlessRule) GetRule() ServerlessRuleType {
	if o == nil {
		return ServerlessRuleType{}
	}
	return o.Rule
}

func (o *ServerlessRule) GetRuleOrigin() *ServerlessRuleOrigin {
	if o == nil {
		return nil
	}
	return o.RuleOrigin
}

func (o *ServerlessRule) GetScope() []ServerlessRuleScope {
	if o == nil {
		return nil
	}
	return o.Scope
}

func (o *ServerlessRule) GetStatus() ServerlessRuleStatus {
	if o == nil {
		return ServerlessRuleStatus("")
	}
	return o.Status
}
