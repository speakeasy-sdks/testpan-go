// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// CdServerlessRule - A CD rule that states what serverless function are allowed and where.
type CdServerlessRule struct {
	// serverless rule action
	Action    ServerlessRuleAction `json:"action"`
	GroupName *string              `json:"groupName,omitempty"`
	ID        *string              `json:"id,omitempty"`
	Name      string               `json:"name"`
	// identify the serverless functions matching type. Only one of the below should be not null, and  used.
	Rule   ServerlessRuleType    `json:"rule"`
	Scope  []ServerlessRuleScope `json:"scope,omitempty"`
	Status ServerlessRuleStatus  `json:"status"`
}

func (o *CdServerlessRule) GetAction() ServerlessRuleAction {
	if o == nil {
		return ServerlessRuleAction("")
	}
	return o.Action
}

func (o *CdServerlessRule) GetGroupName() *string {
	if o == nil {
		return nil
	}
	return o.GroupName
}

func (o *CdServerlessRule) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *CdServerlessRule) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *CdServerlessRule) GetRule() ServerlessRuleType {
	if o == nil {
		return ServerlessRuleType{}
	}
	return o.Rule
}

func (o *CdServerlessRule) GetScope() []ServerlessRuleScope {
	if o == nil {
		return nil
	}
	return o.Scope
}

func (o *CdServerlessRule) GetStatus() ServerlessRuleStatus {
	if o == nil {
		return ServerlessRuleStatus("")
	}
	return o.Status
}
