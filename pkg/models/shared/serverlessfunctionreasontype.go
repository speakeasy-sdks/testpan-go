// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ServerlessFunctionReasonType string

const (
	ServerlessFunctionReasonTypeSecrets            ServerlessFunctionReasonType = "SECRETS"
	ServerlessFunctionReasonTypePolicy             ServerlessFunctionReasonType = "POLICY"
	ServerlessFunctionReasonTypeVulnerabilities    ServerlessFunctionReasonType = "VULNERABILITIES"
	ServerlessFunctionReasonTypePubliclyAccessible ServerlessFunctionReasonType = "PUBLICLY_ACCESSIBLE"
	ServerlessFunctionReasonTypeUnusedFunction     ServerlessFunctionReasonType = "UNUSED_FUNCTION"
	ServerlessFunctionReasonTypeDataAccess         ServerlessFunctionReasonType = "DATA_ACCESS"
	ServerlessFunctionReasonTypeUnidentified       ServerlessFunctionReasonType = "UNIDENTIFIED"
)

func (e ServerlessFunctionReasonType) ToPointer() *ServerlessFunctionReasonType {
	return &e
}

func (e *ServerlessFunctionReasonType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SECRETS":
		fallthrough
	case "POLICY":
		fallthrough
	case "VULNERABILITIES":
		fallthrough
	case "PUBLICLY_ACCESSIBLE":
		fallthrough
	case "UNUSED_FUNCTION":
		fallthrough
	case "DATA_ACCESS":
		fallthrough
	case "UNIDENTIFIED":
		*e = ServerlessFunctionReasonType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ServerlessFunctionReasonType: %v", v)
	}
}
