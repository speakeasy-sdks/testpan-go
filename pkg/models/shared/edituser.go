// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type EditUserStatus string

const (
	EditUserStatusEnabled  EditUserStatus = "ENABLED"
	EditUserStatusDisabled EditUserStatus = "DISABLED"
)

func (e EditUserStatus) ToPointer() *EditUserStatus {
	return &e
}

func (e *EditUserStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ENABLED":
		fallthrough
	case "DISABLED":
		*e = EditUserStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EditUserStatus: %v", v)
	}
}

type EditUserInput struct {
	Description *string `json:"description,omitempty"`
	FullName    string  `json:"fullName"`
	// ID of the user as created by Secure Application management.
	ID *string `json:"id,omitempty"`
	// The role of the user
	Role   *Role          `json:"role,omitempty"`
	Status EditUserStatus `json:"status"`
}

func (o *EditUserInput) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *EditUserInput) GetFullName() string {
	if o == nil {
		return ""
	}
	return o.FullName
}

func (o *EditUserInput) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *EditUserInput) GetRole() *Role {
	if o == nil {
		return nil
	}
	return o.Role
}

func (o *EditUserInput) GetStatus() EditUserStatus {
	if o == nil {
		return EditUserStatus("")
	}
	return o.Status
}
