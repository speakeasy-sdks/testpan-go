// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ReportStatusStatus string

const (
	ReportStatusStatusInProgress ReportStatusStatus = "IN_PROGRESS"
	ReportStatusStatusReady      ReportStatusStatus = "READY"
	ReportStatusStatusFailed     ReportStatusStatus = "FAILED"
)

func (e ReportStatusStatus) ToPointer() *ReportStatusStatus {
	return &e
}

func (e *ReportStatusStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "IN_PROGRESS":
		fallthrough
	case "READY":
		fallthrough
	case "FAILED":
		*e = ReportStatusStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ReportStatusStatus: %v", v)
	}
}

type ReportStatus struct {
	Status *ReportStatusStatus `json:"status,omitempty"`
}

func (o *ReportStatus) GetStatus() *ReportStatusStatus {
	if o == nil {
		return nil
	}
	return o.Status
}
