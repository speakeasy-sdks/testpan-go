// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type TrustedSignerClusterValidation string

const (
	TrustedSignerClusterValidationSignature TrustedSignerClusterValidation = "SIGNATURE"
	TrustedSignerClusterValidationHash      TrustedSignerClusterValidation = "HASH"
	TrustedSignerClusterValidationNone      TrustedSignerClusterValidation = "NONE"
)

func (e TrustedSignerClusterValidation) ToPointer() *TrustedSignerClusterValidation {
	return &e
}

func (e *TrustedSignerClusterValidation) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SIGNATURE":
		fallthrough
	case "HASH":
		fallthrough
	case "NONE":
		*e = TrustedSignerClusterValidation(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TrustedSignerClusterValidation: %v", v)
	}
}
