// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type CDResult string

const (
	CDResultAllow  CDResult = "ALLOW"
	CDResultDetect CDResult = "DETECT"
	CDResultBlock  CDResult = "BLOCK"
)

func (e CDResult) ToPointer() *CDResult {
	return &e
}

func (e *CDResult) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ALLOW":
		fallthrough
	case "DETECT":
		fallthrough
	case "BLOCK":
		*e = CDResult(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CDResult: %v", v)
	}
}
