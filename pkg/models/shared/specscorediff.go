// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"github.com/speakeasy-sdks/testpan-go/pkg/utils"
	"time"
)

type SpecScoreDiff struct {
	Detected   *string    `json:"detected,omitempty"`
	Documented *string    `json:"documented,omitempty"`
	LastSeen   *time.Time `json:"lastSeen,omitempty"`
}

func (s SpecScoreDiff) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SpecScoreDiff) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *SpecScoreDiff) GetDetected() *string {
	if o == nil {
		return nil
	}
	return o.Detected
}

func (o *SpecScoreDiff) GetDocumented() *string {
	if o == nil {
		return nil
	}
	return o.Documented
}

func (o *SpecScoreDiff) GetLastSeen() *time.Time {
	if o == nil {
		return nil
	}
	return o.LastSeen
}
