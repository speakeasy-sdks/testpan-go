// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type AppRuleStatus string

const (
	AppRuleStatusEnabled  AppRuleStatus = "ENABLED"
	AppRuleStatusDisabled AppRuleStatus = "DISABLED"
	AppRuleStatusDeleted  AppRuleStatus = "DELETED"
)

func (e AppRuleStatus) ToPointer() *AppRuleStatus {
	return &e
}

func (e *AppRuleStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ENABLED":
		fallthrough
	case "DISABLED":
		fallthrough
	case "DELETED":
		*e = AppRuleStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AppRuleStatus: %v", v)
	}
}
