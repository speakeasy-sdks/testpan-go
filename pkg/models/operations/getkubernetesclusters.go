// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/speakeasy-sdks/testpan-go/pkg/models/shared"
	"github.com/speakeasy-sdks/testpan-go/pkg/utils"
	"net/http"
)

// GetKubernetesClustersQueryParamSortDir - sorting direction
type GetKubernetesClustersQueryParamSortDir string

const (
	GetKubernetesClustersQueryParamSortDirAsc  GetKubernetesClustersQueryParamSortDir = "ASC"
	GetKubernetesClustersQueryParamSortDirDesc GetKubernetesClustersQueryParamSortDir = "DESC"
)

func (e GetKubernetesClustersQueryParamSortDir) ToPointer() *GetKubernetesClustersQueryParamSortDir {
	return &e
}

func (e *GetKubernetesClustersQueryParamSortDir) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ASC":
		fallthrough
	case "DESC":
		*e = GetKubernetesClustersQueryParamSortDir(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetKubernetesClustersQueryParamSortDir: %v", v)
	}
}

type GetKubernetesClustersRequest struct {
	// the cluster name to filter by
	ClusterName *string `queryParam:"style=form,explode=true,name=clusterName"`
	// Filter the clusters by controller status
	ControllerStatus *string `queryParam:"style=form,explode=true,name=controllerStatus"`
	// Filter the clusters by controller version
	ControllerVersion *string `queryParam:"style=form,explode=true,name=controllerVersion"`
	// When true, the API will return an xlsx file, and pagination will be ignored
	DownloadAsXlsx *bool `queryParam:"style=form,explode=true,name=downloadAsXlsx"`
	// Filter the clusters by k8s version
	KubernetesVersion *string `queryParam:"style=form,explode=true,name=kubernetesVersion"`
	// The number of entries to return (pagination)
	MaxResults *float64 `default:"100" queryParam:"style=form,explode=true,name=maxResults"`
	// Return entries from this offset (pagination)
	Offset *float64 `default:"0" queryParam:"style=form,explode=true,name=offset"`
	// retrive only clusters that configured as spec reconstruction enabled.
	OnlySpecReconstructionEnabledFilter *bool `queryParam:"style=form,explode=true,name=onlySpecReconstructionEnabledFilter"`
	// sorting direction
	SortDir *GetKubernetesClustersQueryParamSortDir `default:"ASC" queryParam:"style=form,explode=true,name=sortDir"`
	// sort key
	SortKey *string `queryParam:"style=form,explode=true,name=sortKey"`
}

func (g GetKubernetesClustersRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetKubernetesClustersRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *GetKubernetesClustersRequest) GetClusterName() *string {
	if o == nil {
		return nil
	}
	return o.ClusterName
}

func (o *GetKubernetesClustersRequest) GetControllerStatus() *string {
	if o == nil {
		return nil
	}
	return o.ControllerStatus
}

func (o *GetKubernetesClustersRequest) GetControllerVersion() *string {
	if o == nil {
		return nil
	}
	return o.ControllerVersion
}

func (o *GetKubernetesClustersRequest) GetDownloadAsXlsx() *bool {
	if o == nil {
		return nil
	}
	return o.DownloadAsXlsx
}

func (o *GetKubernetesClustersRequest) GetKubernetesVersion() *string {
	if o == nil {
		return nil
	}
	return o.KubernetesVersion
}

func (o *GetKubernetesClustersRequest) GetMaxResults() *float64 {
	if o == nil {
		return nil
	}
	return o.MaxResults
}

func (o *GetKubernetesClustersRequest) GetOffset() *float64 {
	if o == nil {
		return nil
	}
	return o.Offset
}

func (o *GetKubernetesClustersRequest) GetOnlySpecReconstructionEnabledFilter() *bool {
	if o == nil {
		return nil
	}
	return o.OnlySpecReconstructionEnabledFilter
}

func (o *GetKubernetesClustersRequest) GetSortDir() *GetKubernetesClustersQueryParamSortDir {
	if o == nil {
		return nil
	}
	return o.SortDir
}

func (o *GetKubernetesClustersRequest) GetSortKey() *string {
	if o == nil {
		return nil
	}
	return o.SortKey
}

type GetKubernetesClustersResponse struct {
	// unknown error
	APIResponse *shared.APIResponse
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Success
	Classes []shared.KubernetesClusterController
}

func (o *GetKubernetesClustersResponse) GetAPIResponse() *shared.APIResponse {
	if o == nil {
		return nil
	}
	return o.APIResponse
}

func (o *GetKubernetesClustersResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetKubernetesClustersResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetKubernetesClustersResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *GetKubernetesClustersResponse) GetClasses() []shared.KubernetesClusterController {
	if o == nil {
		return nil
	}
	return o.Classes
}
