// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"github.com/speakeasy-sdks/testpan-go/pkg/utils"
	"time"
)

// ImageDef - Authorized image hash
type ImageDef struct {
	// Valid hash for the image. * will authorize image name without validating hash
	ImageHash *string    `json:"imageHash,omitempty"`
	ImageName *string    `json:"imageName,omitempty"`
	ImageTags []string   `json:"imageTags,omitempty"`
	TimeAdded *time.Time `json:"timeAdded,omitempty"`
}

func (i ImageDef) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(i, "", false)
}

func (i *ImageDef) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &i, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ImageDef) GetImageHash() *string {
	if o == nil {
		return nil
	}
	return o.ImageHash
}

func (o *ImageDef) GetImageName() *string {
	if o == nil {
		return nil
	}
	return o.ImageName
}

func (o *ImageDef) GetImageTags() []string {
	if o == nil {
		return nil
	}
	return o.ImageTags
}

func (o *ImageDef) GetTimeAdded() *time.Time {
	if o == nil {
		return nil
	}
	return o.TimeAdded
}
