// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ViolationReason string

const (
	ViolationReasonVulnerability ViolationReason = "VULNERABILITY"
	ViolationReasonPsp           ViolationReason = "PSP"
	ViolationReasonAPI           ViolationReason = "API"
	ViolationReasonSidecar       ViolationReason = "SIDECAR"
)

func (e ViolationReason) ToPointer() *ViolationReason {
	return &e
}

func (e *ViolationReason) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "VULNERABILITY":
		fallthrough
	case "PSP":
		fallthrough
	case "API":
		fallthrough
	case "SIDECAR":
		*e = ViolationReason(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ViolationReason: %v", v)
	}
}
