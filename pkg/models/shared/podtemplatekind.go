// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type PodTemplateKind string

const (
	PodTemplateKindReplicaSet  PodTemplateKind = "ReplicaSet"
	PodTemplateKindDeployment  PodTemplateKind = "Deployment"
	PodTemplateKindJob         PodTemplateKind = "Job"
	PodTemplateKindCronJob     PodTemplateKind = "CronJob"
	PodTemplateKindDaemonSet   PodTemplateKind = "DaemonSet"
	PodTemplateKindStatefulSet PodTemplateKind = "StatefulSet"
	PodTemplateKindPod         PodTemplateKind = "Pod"
	PodTemplateKindOther       PodTemplateKind = "Other"
)

func (e PodTemplateKind) ToPointer() *PodTemplateKind {
	return &e
}

func (e *PodTemplateKind) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ReplicaSet":
		fallthrough
	case "Deployment":
		fallthrough
	case "Job":
		fallthrough
	case "CronJob":
		fallthrough
	case "DaemonSet":
		fallthrough
	case "StatefulSet":
		fallthrough
	case "Pod":
		fallthrough
	case "Other":
		*e = PodTemplateKind(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PodTemplateKind: %v", v)
	}
}
