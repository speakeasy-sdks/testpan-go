// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ServerlessDefaultRule string

const (
	ServerlessDefaultRuleAllowAll  ServerlessDefaultRule = "ALLOW_ALL"
	ServerlessDefaultRuleDetectAll ServerlessDefaultRule = "DETECT_ALL"
	ServerlessDefaultRuleBlockAll  ServerlessDefaultRule = "BLOCK_ALL"
)

func (e ServerlessDefaultRule) ToPointer() *ServerlessDefaultRule {
	return &e
}

func (e *ServerlessDefaultRule) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ALLOW_ALL":
		fallthrough
	case "DETECT_ALL":
		fallthrough
	case "BLOCK_ALL":
		*e = ServerlessDefaultRule(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ServerlessDefaultRule: %v", v)
	}
}
