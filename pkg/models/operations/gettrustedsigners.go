// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/speakeasy-sdks/testpan-go/pkg/models/shared"
	"github.com/speakeasy-sdks/testpan-go/pkg/utils"
	"net/http"
)

// GetTrustedSignersQueryParamSortDir - sorting direction
type GetTrustedSignersQueryParamSortDir string

const (
	GetTrustedSignersQueryParamSortDirAsc  GetTrustedSignersQueryParamSortDir = "ASC"
	GetTrustedSignersQueryParamSortDirDesc GetTrustedSignersQueryParamSortDir = "DESC"
)

func (e GetTrustedSignersQueryParamSortDir) ToPointer() *GetTrustedSignersQueryParamSortDir {
	return &e
}

func (e *GetTrustedSignersQueryParamSortDir) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ASC":
		fallthrough
	case "DESC":
		*e = GetTrustedSignersQueryParamSortDir(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetTrustedSignersQueryParamSortDir: %v", v)
	}
}

// GetTrustedSignersQueryParamSortKey - sort key
type GetTrustedSignersQueryParamSortKey string

const (
	GetTrustedSignersQueryParamSortKeyName GetTrustedSignersQueryParamSortKey = "name"
)

func (e GetTrustedSignersQueryParamSortKey) ToPointer() *GetTrustedSignersQueryParamSortKey {
	return &e
}

func (e *GetTrustedSignersQueryParamSortKey) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "name":
		*e = GetTrustedSignersQueryParamSortKey(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetTrustedSignersQueryParamSortKey: %v", v)
	}
}

type GetTrustedSignersRequest struct {
	// sorting direction
	SortDir *GetTrustedSignersQueryParamSortDir `default:"ASC" queryParam:"style=form,explode=true,name=sortDir"`
	// sort key
	SortKey *GetTrustedSignersQueryParamSortKey `default:"name" queryParam:"style=form,explode=true,name=sortKey"`
}

func (g GetTrustedSignersRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetTrustedSignersRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *GetTrustedSignersRequest) GetSortDir() *GetTrustedSignersQueryParamSortDir {
	if o == nil {
		return nil
	}
	return o.SortDir
}

func (o *GetTrustedSignersRequest) GetSortKey() *GetTrustedSignersQueryParamSortKey {
	if o == nil {
		return nil
	}
	return o.SortKey
}

type GetTrustedSignersResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Success
	Classes []shared.TrustedSigner
}

func (o *GetTrustedSignersResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetTrustedSignersResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetTrustedSignersResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *GetTrustedSignersResponse) GetClasses() []shared.TrustedSigner {
	if o == nil {
		return nil
	}
	return o.Classes
}
