// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/speakeasy-sdks/testpan-go/pkg/models/shared"
	"github.com/speakeasy-sdks/testpan-go/pkg/utils"
	"net/http"
)

// GetRiskAssessmentImageIDVulnerabilitiesSortDir - sorting direction
type GetRiskAssessmentImageIDVulnerabilitiesSortDir string

const (
	GetRiskAssessmentImageIDVulnerabilitiesSortDirAsc  GetRiskAssessmentImageIDVulnerabilitiesSortDir = "ASC"
	GetRiskAssessmentImageIDVulnerabilitiesSortDirDesc GetRiskAssessmentImageIDVulnerabilitiesSortDir = "DESC"
)

func (e GetRiskAssessmentImageIDVulnerabilitiesSortDir) ToPointer() *GetRiskAssessmentImageIDVulnerabilitiesSortDir {
	return &e
}

func (e *GetRiskAssessmentImageIDVulnerabilitiesSortDir) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ASC":
		fallthrough
	case "DESC":
		*e = GetRiskAssessmentImageIDVulnerabilitiesSortDir(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetRiskAssessmentImageIDVulnerabilitiesSortDir: %v", v)
	}
}

// GetRiskAssessmentImageIDVulnerabilitiesSortKey - risk assessment image sort key.
type GetRiskAssessmentImageIDVulnerabilitiesSortKey string

const (
	GetRiskAssessmentImageIDVulnerabilitiesSortKeySeverity GetRiskAssessmentImageIDVulnerabilitiesSortKey = "SEVERITY"
)

func (e GetRiskAssessmentImageIDVulnerabilitiesSortKey) ToPointer() *GetRiskAssessmentImageIDVulnerabilitiesSortKey {
	return &e
}

func (e *GetRiskAssessmentImageIDVulnerabilitiesSortKey) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SEVERITY":
		*e = GetRiskAssessmentImageIDVulnerabilitiesSortKey(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetRiskAssessmentImageIDVulnerabilitiesSortKey: %v", v)
	}
}

type GetRiskAssessmentImageIDVulnerabilitiesRequest struct {
	// The id of the risk assessment image
	ImageID string `pathParam:"style=simple,explode=false,name=imageId"`
	// The number of entries to return (pagination)
	MaxResults *float64 `default:"100" queryParam:"style=form,explode=true,name=maxResults"`
	// Return entries from this offset (pagination)
	Offset *float64 `default:"0" queryParam:"style=form,explode=true,name=offset"`
	// sorting direction
	SortDir *GetRiskAssessmentImageIDVulnerabilitiesSortDir `default:"DESC" queryParam:"style=form,explode=true,name=sortDir"`
	// risk assessment image sort key.
	SortKey GetRiskAssessmentImageIDVulnerabilitiesSortKey `default:"SEVERITY" queryParam:"style=form,explode=true,name=sortKey"`
}

func (g GetRiskAssessmentImageIDVulnerabilitiesRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetRiskAssessmentImageIDVulnerabilitiesRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *GetRiskAssessmentImageIDVulnerabilitiesRequest) GetImageID() string {
	if o == nil {
		return ""
	}
	return o.ImageID
}

func (o *GetRiskAssessmentImageIDVulnerabilitiesRequest) GetMaxResults() *float64 {
	if o == nil {
		return nil
	}
	return o.MaxResults
}

func (o *GetRiskAssessmentImageIDVulnerabilitiesRequest) GetOffset() *float64 {
	if o == nil {
		return nil
	}
	return o.Offset
}

func (o *GetRiskAssessmentImageIDVulnerabilitiesRequest) GetSortDir() *GetRiskAssessmentImageIDVulnerabilitiesSortDir {
	if o == nil {
		return nil
	}
	return o.SortDir
}

func (o *GetRiskAssessmentImageIDVulnerabilitiesRequest) GetSortKey() GetRiskAssessmentImageIDVulnerabilitiesSortKey {
	if o == nil {
		return GetRiskAssessmentImageIDVulnerabilitiesSortKey("")
	}
	return o.SortKey
}

type GetRiskAssessmentImageIDVulnerabilitiesResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// Success
	RiskAssessmentVulnerabilities []shared.RiskAssessmentVulnerability
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *GetRiskAssessmentImageIDVulnerabilitiesResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetRiskAssessmentImageIDVulnerabilitiesResponse) GetRiskAssessmentVulnerabilities() []shared.RiskAssessmentVulnerability {
	if o == nil {
		return nil
	}
	return o.RiskAssessmentVulnerabilities
}

func (o *GetRiskAssessmentImageIDVulnerabilitiesResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetRiskAssessmentImageIDVulnerabilitiesResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
