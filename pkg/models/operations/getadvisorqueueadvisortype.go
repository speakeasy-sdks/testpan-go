// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/speakeasy-sdks/testpan-go/pkg/models/shared"
	"net/http"
)

type AdvisorType string

const (
	AdvisorTypeEnvironment         AdvisorType = "ENVIRONMENT"
	AdvisorTypePodSecurityStandard AdvisorType = "POD_SECURITY_STANDARD"
	AdvisorTypeConnectionRules     AdvisorType = "CONNECTION_RULES"
	AdvisorTypeDeploymentRules     AdvisorType = "DEPLOYMENT_RULES"
	AdvisorTypeAPIRules            AdvisorType = "API_RULES"
)

func (e AdvisorType) ToPointer() *AdvisorType {
	return &e
}

func (e *AdvisorType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ENVIRONMENT":
		fallthrough
	case "POD_SECURITY_STANDARD":
		fallthrough
	case "CONNECTION_RULES":
		fallthrough
	case "DEPLOYMENT_RULES":
		fallthrough
	case "API_RULES":
		*e = AdvisorType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AdvisorType: %v", v)
	}
}

type GetAdvisorQueueAdvisorTypeRequest struct {
	AdvisorType AdvisorType `pathParam:"style=simple,explode=false,name=advisorType"`
}

func (o *GetAdvisorQueueAdvisorTypeRequest) GetAdvisorType() AdvisorType {
	if o == nil {
		return AdvisorType("")
	}
	return o.AdvisorType
}

type GetAdvisorQueueAdvisorTypeResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// Success
	PolicyAdvisorState *shared.PolicyAdvisorState
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *GetAdvisorQueueAdvisorTypeResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetAdvisorQueueAdvisorTypeResponse) GetPolicyAdvisorState() *shared.PolicyAdvisorState {
	if o == nil {
		return nil
	}
	return o.PolicyAdvisorState
}

func (o *GetAdvisorQueueAdvisorTypeResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetAdvisorQueueAdvisorTypeResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
