// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"github.com/speakeasy-sdks/testpan-go/pkg/utils"
	"time"
)

type APIServiceScore struct {
	API        APIServiceScoreGrade  `json:"api"`
	Identifier string                `json:"identifier"`
	Provider   APIProviderScoreGrade `json:"provider"`
	// An enumeration.
	Status    ScoreExitStatusEnum `json:"status"`
	Timestamp time.Time           `json:"timestamp"`
}

func (a APIServiceScore) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *APIServiceScore) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *APIServiceScore) GetAPI() APIServiceScoreGrade {
	if o == nil {
		return APIServiceScoreGrade{}
	}
	return o.API
}

func (o *APIServiceScore) GetIdentifier() string {
	if o == nil {
		return ""
	}
	return o.Identifier
}

func (o *APIServiceScore) GetProvider() APIProviderScoreGrade {
	if o == nil {
		return APIProviderScoreGrade{}
	}
	return o.Provider
}

func (o *APIServiceScore) GetStatus() ScoreExitStatusEnum {
	if o == nil {
		return ScoreExitStatusEnum("")
	}
	return o.Status
}

func (o *APIServiceScore) GetTimestamp() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.Timestamp
}
