// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ServerlessPeriodicJobExpressionPeriodicJobType string

const (
	ServerlessPeriodicJobExpressionPeriodicJobTypeServerlessByHoursPeriodicJobExpression ServerlessPeriodicJobExpressionPeriodicJobType = "ServerlessByHoursPeriodicJobExpression"
	ServerlessPeriodicJobExpressionPeriodicJobTypeServerlessByDaysPeriodicJobExpression  ServerlessPeriodicJobExpressionPeriodicJobType = "ServerlessByDaysPeriodicJobExpression"
)

func (e ServerlessPeriodicJobExpressionPeriodicJobType) ToPointer() *ServerlessPeriodicJobExpressionPeriodicJobType {
	return &e
}

func (e *ServerlessPeriodicJobExpressionPeriodicJobType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ServerlessByHoursPeriodicJobExpression":
		fallthrough
	case "ServerlessByDaysPeriodicJobExpression":
		*e = ServerlessPeriodicJobExpressionPeriodicJobType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ServerlessPeriodicJobExpressionPeriodicJobType: %v", v)
	}
}

type ServerlessPeriodicJobExpression struct {
	PeriodicJobType ServerlessPeriodicJobExpressionPeriodicJobType `json:"PeriodicJobType"`
}

func (o *ServerlessPeriodicJobExpression) GetPeriodicJobType() ServerlessPeriodicJobExpressionPeriodicJobType {
	if o == nil {
		return ServerlessPeriodicJobExpressionPeriodicJobType("")
	}
	return o.PeriodicJobType
}
