// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/speakeasy-sdks/testpan-go/pkg/models/shared"
	"github.com/speakeasy-sdks/testpan-go/pkg/utils"
	"net/http"
)

// GetServerlessZipFilesQueryParamSortDir - sorting direction
type GetServerlessZipFilesQueryParamSortDir string

const (
	GetServerlessZipFilesQueryParamSortDirAsc  GetServerlessZipFilesQueryParamSortDir = "ASC"
	GetServerlessZipFilesQueryParamSortDirDesc GetServerlessZipFilesQueryParamSortDir = "DESC"
)

func (e GetServerlessZipFilesQueryParamSortDir) ToPointer() *GetServerlessZipFilesQueryParamSortDir {
	return &e
}

func (e *GetServerlessZipFilesQueryParamSortDir) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ASC":
		fallthrough
	case "DESC":
		*e = GetServerlessZipFilesQueryParamSortDir(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetServerlessZipFilesQueryParamSortDir: %v", v)
	}
}

// GetServerlessZipFilesQueryParamSortKey - sort key
type GetServerlessZipFilesQueryParamSortKey string

const (
	GetServerlessZipFilesQueryParamSortKeyTime            GetServerlessZipFilesQueryParamSortKey = "TIME"
	GetServerlessZipFilesQueryParamSortKeyVulnerabilities GetServerlessZipFilesQueryParamSortKey = "VULNERABILITIES"
)

func (e GetServerlessZipFilesQueryParamSortKey) ToPointer() *GetServerlessZipFilesQueryParamSortKey {
	return &e
}

func (e *GetServerlessZipFilesQueryParamSortKey) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "TIME":
		fallthrough
	case "VULNERABILITIES":
		*e = GetServerlessZipFilesQueryParamSortKey(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetServerlessZipFilesQueryParamSortKey: %v", v)
	}
}

type GetServerlessZipFilesRequest struct {
	// The number of entries to return (pagination)
	MaxResults *float64 `default:"100" queryParam:"style=form,explode=true,name=maxResults"`
	// Return entries from this offset (pagination)
	Offset *float64 `default:"0" queryParam:"style=form,explode=true,name=offset"`
	// sorting direction
	SortDir *GetServerlessZipFilesQueryParamSortDir `default:"ASC" queryParam:"style=form,explode=true,name=sortDir"`
	// sort key
	SortKey         *GetServerlessZipFilesQueryParamSortKey `default:"VULNERABILITIES" queryParam:"style=form,explode=true,name=sortKey"`
	ZipNameFilter   *string                                 `queryParam:"style=form,explode=true,name=zipNameFilter"`
	ZipSha256Filter *string                                 `queryParam:"style=form,explode=true,name=zipSha256Filter"`
}

func (g GetServerlessZipFilesRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetServerlessZipFilesRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *GetServerlessZipFilesRequest) GetMaxResults() *float64 {
	if o == nil {
		return nil
	}
	return o.MaxResults
}

func (o *GetServerlessZipFilesRequest) GetOffset() *float64 {
	if o == nil {
		return nil
	}
	return o.Offset
}

func (o *GetServerlessZipFilesRequest) GetSortDir() *GetServerlessZipFilesQueryParamSortDir {
	if o == nil {
		return nil
	}
	return o.SortDir
}

func (o *GetServerlessZipFilesRequest) GetSortKey() *GetServerlessZipFilesQueryParamSortKey {
	if o == nil {
		return nil
	}
	return o.SortKey
}

func (o *GetServerlessZipFilesRequest) GetZipNameFilter() *string {
	if o == nil {
		return nil
	}
	return o.ZipNameFilter
}

func (o *GetServerlessZipFilesRequest) GetZipSha256Filter() *string {
	if o == nil {
		return nil
	}
	return o.ZipSha256Filter
}

type GetServerlessZipFilesResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Success
	Classes []shared.ServerlessZip
}

func (o *GetServerlessZipFilesResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetServerlessZipFilesResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetServerlessZipFilesResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *GetServerlessZipFilesResponse) GetClasses() []shared.ServerlessZip {
	if o == nil {
		return nil
	}
	return o.Classes
}
