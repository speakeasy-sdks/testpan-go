// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"github.com/speakeasy-sdks/testpan-go/pkg/utils"
	"time"
)

type MitreDashboard struct {
	LastUpdate *time.Time                `json:"lastUpdate,omitempty"`
	Namespaces []MitreDashboardNamespace `json:"namespaces,omitempty"`
	Table      *MitreTable               `json:"table,omitempty"`
}

func (m MitreDashboard) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MitreDashboard) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MitreDashboard) GetLastUpdate() *time.Time {
	if o == nil {
		return nil
	}
	return o.LastUpdate
}

func (o *MitreDashboard) GetNamespaces() []MitreDashboardNamespace {
	if o == nil {
		return nil
	}
	return o.Namespaces
}

func (o *MitreDashboard) GetTable() *MitreTable {
	if o == nil {
		return nil
	}
	return o.Table
}
