// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type PSPVolumeTypes string

const (
	PSPVolumeTypesAwsElasticBlockStore  PSPVolumeTypes = "awsElasticBlockStore"
	PSPVolumeTypesAzureDisk             PSPVolumeTypes = "azureDisk"
	PSPVolumeTypesAzureFile             PSPVolumeTypes = "azureFile"
	PSPVolumeTypesCephfs                PSPVolumeTypes = "cephfs"
	PSPVolumeTypesCinder                PSPVolumeTypes = "cinder"
	PSPVolumeTypesConfigMap             PSPVolumeTypes = "configMap"
	PSPVolumeTypesCsi                   PSPVolumeTypes = "csi"
	PSPVolumeTypesDownwardAPI           PSPVolumeTypes = "downwardAPI"
	PSPVolumeTypesEmptyDir              PSPVolumeTypes = "emptyDir"
	PSPVolumeTypesFc                    PSPVolumeTypes = "fc"
	PSPVolumeTypesFlexVolume            PSPVolumeTypes = "flexVolume"
	PSPVolumeTypesFlocker               PSPVolumeTypes = "flocker"
	PSPVolumeTypesGcePersistentDisk     PSPVolumeTypes = "gcePersistentDisk"
	PSPVolumeTypesGlusterfs             PSPVolumeTypes = "glusterfs"
	PSPVolumeTypesHostPath              PSPVolumeTypes = "hostPath"
	PSPVolumeTypesIscsi                 PSPVolumeTypes = "iscsi"
	PSPVolumeTypesLocal                 PSPVolumeTypes = "local"
	PSPVolumeTypesNfs                   PSPVolumeTypes = "nfs"
	PSPVolumeTypesPersistentVolumeClaim PSPVolumeTypes = "persistentVolumeClaim"
	PSPVolumeTypesProjected             PSPVolumeTypes = "projected"
	PSPVolumeTypesPortworxVolume        PSPVolumeTypes = "portworxVolume"
	PSPVolumeTypesQuobyte               PSPVolumeTypes = "quobyte"
	PSPVolumeTypesRbd                   PSPVolumeTypes = "rbd"
	PSPVolumeTypesScaleIo               PSPVolumeTypes = "scaleIO"
	PSPVolumeTypesSecret                PSPVolumeTypes = "secret"
	PSPVolumeTypesStorageos             PSPVolumeTypes = "storageos"
	PSPVolumeTypesVsphereVolume         PSPVolumeTypes = "vsphereVolume"
	PSPVolumeTypesAll                   PSPVolumeTypes = "all"
)

func (e PSPVolumeTypes) ToPointer() *PSPVolumeTypes {
	return &e
}

func (e *PSPVolumeTypes) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "awsElasticBlockStore":
		fallthrough
	case "azureDisk":
		fallthrough
	case "azureFile":
		fallthrough
	case "cephfs":
		fallthrough
	case "cinder":
		fallthrough
	case "configMap":
		fallthrough
	case "csi":
		fallthrough
	case "downwardAPI":
		fallthrough
	case "emptyDir":
		fallthrough
	case "fc":
		fallthrough
	case "flexVolume":
		fallthrough
	case "flocker":
		fallthrough
	case "gcePersistentDisk":
		fallthrough
	case "glusterfs":
		fallthrough
	case "hostPath":
		fallthrough
	case "iscsi":
		fallthrough
	case "local":
		fallthrough
	case "nfs":
		fallthrough
	case "persistentVolumeClaim":
		fallthrough
	case "projected":
		fallthrough
	case "portworxVolume":
		fallthrough
	case "quobyte":
		fallthrough
	case "rbd":
		fallthrough
	case "scaleIO":
		fallthrough
	case "secret":
		fallthrough
	case "storageos":
		fallthrough
	case "vsphereVolume":
		fallthrough
	case "all":
		*e = PSPVolumeTypes(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PSPVolumeTypes: %v", v)
	}
}
