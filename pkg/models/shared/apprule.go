// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"github.com/speakeasy-sdks/testpan-go/pkg/utils"
)

// AppRule - A rule that states what Apps are allowed to run on what environments.
type AppRule struct {
	// identify the workload type. Only one of the below should be not null, and  used.
	App        *WorkloadRuleType `json:"app,omitempty"`
	GroupName  *string           `json:"groupName,omitempty"`
	ID         *string           `json:"id,omitempty"`
	Name       string            `json:"name"`
	RuleOrigin *AppRuleOrigin    `default:"USER" json:"ruleOrigin"`
	// identify the app rule type. Only one of the below should be not null, and  used.
	RuleTypeProperties AppRuleType `json:"ruleTypeProperties"`
	// identify the scope type. Only one of the below should be not null, and  used.
	Scope  *WorkloadRuleScopeType `json:"scope,omitempty"`
	Status AppRuleStatus          `json:"status"`
}

func (a AppRule) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *AppRule) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *AppRule) GetApp() *WorkloadRuleType {
	if o == nil {
		return nil
	}
	return o.App
}

func (o *AppRule) GetGroupName() *string {
	if o == nil {
		return nil
	}
	return o.GroupName
}

func (o *AppRule) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *AppRule) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *AppRule) GetRuleOrigin() *AppRuleOrigin {
	if o == nil {
		return nil
	}
	return o.RuleOrigin
}

func (o *AppRule) GetRuleTypeProperties() AppRuleType {
	if o == nil {
		return AppRuleType{}
	}
	return o.RuleTypeProperties
}

func (o *AppRule) GetScope() *WorkloadRuleScopeType {
	if o == nil {
		return nil
	}
	return o.Scope
}

func (o *AppRule) GetStatus() AppRuleStatus {
	if o == nil {
		return AppRuleStatus("")
	}
	return o.Status
}
