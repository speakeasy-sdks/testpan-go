// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"github.com/speakeasy-sdks/testpan-go/pkg/utils"
	"time"
)

type APIServiceBase struct {
	// API classification label as determined by Crankshaft, e.g. ['meetings', 'messaging']
	Classification    []string   `json:"classification,omitempty"`
	CreationTimestamp *time.Time `json:"creation_timestamp,omitempty"`
	// Textual description of the Service
	Description *string `json:"description,omitempty"`
	// Unique id of the subject API as assigned by Crankshaft
	Identifier string `json:"identifier"`
	// API name, usually an FQDN as determined by crankshaft, it can be logical or can correspond to one of the endpoints where the API is reachable, i.e. api.webex.com
	Name string `json:"name"`
	// API provider id
	ProviderID *string `json:"provider_id,omitempty"`
	// An `enum`eration.
	Risk *APISecurityRiskSeverity `json:"risk,omitempty"`
	// Api status enumeration.
	Status            *APISecurityAPIStatus `json:"status,omitempty"`
	StatusDescription *string               `json:"status_description,omitempty"`
}

func (a APIServiceBase) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *APIServiceBase) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *APIServiceBase) GetClassification() []string {
	if o == nil {
		return nil
	}
	return o.Classification
}

func (o *APIServiceBase) GetCreationTimestamp() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreationTimestamp
}

func (o *APIServiceBase) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *APIServiceBase) GetIdentifier() string {
	if o == nil {
		return ""
	}
	return o.Identifier
}

func (o *APIServiceBase) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *APIServiceBase) GetProviderID() *string {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *APIServiceBase) GetRisk() *APISecurityRiskSeverity {
	if o == nil {
		return nil
	}
	return o.Risk
}

func (o *APIServiceBase) GetStatus() *APISecurityAPIStatus {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *APIServiceBase) GetStatusDescription() *string {
	if o == nil {
		return nil
	}
	return o.StatusDescription
}
