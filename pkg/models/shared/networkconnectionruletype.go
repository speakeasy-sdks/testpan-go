// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type NetworkConnectionRuleType string

const (
	NetworkConnectionRuleTypeUserRule      NetworkConnectionRuleType = "USER_RULE"
	NetworkConnectionRuleTypeDefaultRule   NetworkConnectionRuleType = "DEFAULT_RULE"
	NetworkConnectionRuleTypeDirectPodRule NetworkConnectionRuleType = "DIRECT_POD_RULE"
)

func (e NetworkConnectionRuleType) ToPointer() *NetworkConnectionRuleType {
	return &e
}

func (e *NetworkConnectionRuleType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "USER_RULE":
		fallthrough
	case "DEFAULT_RULE":
		fallthrough
	case "DIRECT_POD_RULE":
		*e = NetworkConnectionRuleType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for NetworkConnectionRuleType: %v", v)
	}
}
